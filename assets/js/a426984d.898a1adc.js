(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[27],{44339:(e,t,n)=>{"use strict";n.d(t,{l:()=>g});var o=n(87462),r=n(67294);const a="browserWindow_vOie",s="browserWindowBody_mRjT";const l=function(e){let{children:t,minHeight:n=""}=e;return r.createElement("div",{className:a,style:{minHeight:n}},r.createElement("div",{className:s},t))};var i=n(92949);const c=[],p=(0,r.lazy)((()=>Promise.all([n.e(532),n.e(302)]).then(n.bind(n,2302))));const u=function(e){let t;const{colorMode:n}=(0,i.I)();return r.createElement(r.Suspense,{fallback:r.createElement("div",null,"Loading")},r.createElement(p,(0,o.Z)({},e,{editorWillMount:function(n){t=n,n.editor.defineTheme("vs-dark",{base:"vs-dark",inherit:!0,rules:[{background:"121212"}],colors:{"editor.background":"#121212"}}),n.languages.typescript.typescriptDefaults.setCompilerOptions({target:n.languages.typescript.ScriptTarget.ES2017,allowNonTsExtensions:!0,moduleResolution:n.languages.typescript.ModuleResolutionKind.NodeJs,module:n.languages.typescript.ModuleKind.ESNext,typeRoots:["node_modules/@types"]}),c.forEach((e=>{const t=`file:///node_modules/${e.name}`;n.languages.typescript.typescriptDefaults.addExtraLib(e.dts,t)})),e.editorWillMount&&e.editorWillMount(n)},editorWillUnmount:()=>{},editorDidMount:function(n){n.setModel(t.editor.createModel(e.value,"typescript",t.Uri.parse(`file:///main-${Math.random()}.ts`)))},theme:"dark"===n?"vs-dark":"vs-light"})))},d=()=>{const{colorMode:e}=(0,i.I)();return r.createElement("svg",{style:{width:"24px"},className:"margin-right--sm",width:"38",height:"38",viewBox:"0 0 38 38",xmlns:"http://www.w3.org/2000/svg",stroke:"dark"===e?"#fff":"#3880ff"},r.createElement("g",{fill:"none",fillRule:"evenodd"},r.createElement("g",{transform:"translate(1 1)",strokeWidth:"2"},r.createElement("circle",{strokeOpacity:".5",cx:"18",cy:"18",r:"18"}),r.createElement("path",{d:"M36 18c0-9.94-8.06-18-18-18"},r.createElement("animateTransform",{attributeName:"transform",type:"rotate",from:"0 18 18",to:"360 18 18",dur:"1s",repeatCount:"indefinite"})))))};var _=n(38996);let m;!function(e){e[e.INIT=0]="INIT",e[e.STARTED=1]="STARTED",e[e.ENDED=2]="ENDED"}(m||(m={}));const E=e=>{let{code:t}=e;const[n,a]=(0,r.useState)(t.props.children.props.children),[s,i]=(0,r.useState)(m.INIT),[c,p]=(0,r.useState)(""),[E,g]=(0,r.useState)(!0),f=async()=>{p(""),i(m.INIT)},h={width:800,height:18*(1+n.split("\n").length)};return r.createElement(r.Fragment,null,E?t:r.createElement(u,(0,o.Z)({},h,{language:"typescript",value:n,onChange:e=>{a(e)},options:{scrollBeyondLastLine:!1,minimap:{enabled:!1},wordWrap:"on"}})),r.createElement(l,null,r.createElement("button",{className:"button button--primary margin-right--xs",onClick:()=>{(async()=>{s!==m.STARTED&&(await f(),i(m.STARTED),setTimeout((async()=>{await(0,_._)(n,p),i(m.ENDED)}),10))})()}},"Run Code"),r.createElement("button",{className:"button button--secondary margin-right--xs",onClick:()=>{(async()=>{g(!E)})()}},E?"Edit Code":"Show Example"),r.createElement("button",{className:"button button--secondary",onClick:()=>{f()}},"Clear Output"),s!==m.INIT?r.createElement(r.Fragment,null,r.createElement("h4",{className:"margin-vert--md"},"Output"),r.createElement("pre",null,r.createElement("span",{className:"d-align-items--center"},s===m.STARTED?r.createElement(r.Fragment,null,r.createElement(d,null)):"",c||s===m.ENDED?c:"Waiting for output..."))):""))},g=e=>r.createElement(E,{code:e.children})},38996:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{_:()=>runCode});var typescript__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(55423),typescript__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(typescript__WEBPACK_IMPORTED_MODULE_0__),ibcf_sdk__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(69754),ibcf_sdk__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(ibcf_sdk__WEBPACK_IMPORTED_MODULE_1__),_taquito_taquito__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(53507),ethers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(91023);function replaceAll(e,t,n){return e.split(t).join(n)}const removeImports=e=>e.split("\n").map((e=>{let t=!0;e.trim().startsWith("import")&&(t=!1);return t?e:void 0})).filter((e=>!!e)).join("\n"),runCode=(rawCode,setOutput)=>{let code=rawCode;const coinlib={};let output="";const appendOutput=e=>{output+="\n"+e,setOutput(output.trim())},myLog=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];console.log("CODE_RUNNER:",...t),appendOutput(t.map((e=>"object"==typeof e?JSON.stringify(e,null,2):e)).join(" "))},lib={IbcfSdk:ibcf_sdk__WEBPACK_IMPORTED_MODULE_1__,Ethereum:ibcf_sdk__WEBPACK_IMPORTED_MODULE_1__.Ethereum,Tezos:ibcf_sdk__WEBPACK_IMPORTED_MODULE_1__.Tezos,TezosToolkit:_taquito_taquito__WEBPACK_IMPORTED_MODULE_2__.TezosToolkit,ethers:ethers__WEBPACK_IMPORTED_MODULE_3__};let runnable;return code=replaceAll(code,"console.log","progress"),code=removeImports(code),code=typescript__WEBPACK_IMPORTED_MODULE_0__.transpile(`({\n        run: async (prelude: any, progress: any): string => {\n          Object.keys(prelude).forEach(key => {\n            window[key] = prelude[key]\n          })\n          return (async () => {\n            ${code};\n            if (typeof result !== 'undefined') {\n              return result\n            }\n          })()\n        })`),new Promise((resolve=>{try{runnable=eval(code),runnable.run(lib,myLog).then((e=>{e&&appendOutput("Returned:\n"+JSON.stringify(e,null,2)),resolve(e)})).catch((e=>{console.warn(e),appendOutput(JSON.stringify(e,null,2)),resolve(e)}))}catch(e){appendOutput(e),console.error(e),resolve(e)}}))}},92069:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var o=n(87462),r=(n(67294),n(3905)),a=n(65488),s=n(85162),l=n(44339);const i={title:"Generating Proofs",slug:"/examples/generate-proofs"},c=void 0,p={unversionedId:"developers/examples/generating-proofs",id:"developers/examples/generating-proofs",title:"Generating Proofs",description:"Generate proof-of-inclusion (Tezos EVM)",source:"@site/docs/developers/examples/generating-proofs.mdx",sourceDirName:"developers/examples",slug:"/examples/generate-proofs",permalink:"/acurast-hyperdrive/examples/generate-proofs",draft:!1,editUrl:"https://github.com/Acurast/acurast-hyperdrive/tree/main/apps/documentation/docs/developers/examples/generating-proofs.mdx",tags:[],version:"current",frontMatter:{title:"Generating Proofs",slug:"/examples/generate-proofs"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/acurast-hyperdrive/get-started"},next:{title:"Crowdfunding",permalink:"/acurast-hyperdrive/examples/crowdfunding"}},u={},d=[{value:"Generate proof-of-inclusion (Tezos \u27a1\ufe0f EVM)",id:"generate-proof-of-inclusion-tezos-\ufe0f-evm",level:2},{value:"Generate proof-of-inclusion (EVM \u27a1\ufe0f Tezos)",id:"generate-proof-of-inclusion-evm-\ufe0f-tezos",level:2}],_={toc:d};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"generate-proof-of-inclusion-tezos-\ufe0f-evm"},"Generate proof-of-inclusion (Tezos \u27a1\ufe0f EVM)"),(0,r.kt)("p",null,"The example below calls the state aggregator contract on the Tezos blockchain, which generates a Merkle proof for a given state inserted by a given origin."),(0,r.kt)("p",null,"Install the SDK's:"),(0,r.kt)(a.Z,{groupId:"packet-manager",defaultValue:"npm",values:[{label:"NPM",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save ibcf-sdk @taquito/taquito\n"))),(0,r.kt)(s.Z,{value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add ibcf-sdk @taquito/taquito\n")))),(0,r.kt)(l.l,{mdxType:"RunnableCode"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { Tezos } from "ibcf-sdk";\nimport { TezosToolkit } from "@taquito/taquito";\n\nconst TEZOS_RPC = "https://tezos-ghostnet-node-1.diamond.papers.tech";\nconst TEZOS_STATE = "KT1B8F7BhA2EeGQvPFpaVStd99ZDSzwrAcBL";\n\nconst tezosSdk = new TezosToolkit(TEZOS_RPC);\nconst stateAggregator = new Tezos.Contracts.StateAggregator.Contract(\n  tezosSdk,\n  TEZOS_STATE\n);\n\n// DApp address, the contract that inserts the state\nconst STATE_ORIGIN = "KT1AyXoM57cyXv8yZLn4nBNzVSmCJKMtuEdf";\n// The key of the state you want to validate\nconst STATE_KEY = "0x01";\n// Block level where the snapshot was taken\nconst SNAPSHOT_LEVEL = 1883726;\n\nstateAggregator\n  .getProof(\n    STATE_ORIGIN, // Origin\n    STATE_KEY, // State key\n    SNAPSHOT_LEVEL // Block level where the snapshot was taken\n  )\n  .then(console.log);\n'))),(0,r.kt)("h2",{id:"generate-proof-of-inclusion-evm-\ufe0f-tezos"},"Generate proof-of-inclusion (EVM \u27a1\ufe0f Tezos)"),(0,r.kt)("p",null,"The example below uses ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1186"},"eth_getProof")," to extract a storage proof of an EVM smart contract."),(0,r.kt)("p",null,"Both the storage slot and proof are ",(0,r.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp"},"RLP")," encoded."),(0,r.kt)("p",null,"Install the SDK's:"),(0,r.kt)(a.Z,{groupId:"packet-manager",defaultValue:"npm",values:[{label:"NPM",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save ibcf-sdk ethers\n"))),(0,r.kt)(s.Z,{value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add ibcf-sdk ethers\n")))),(0,r.kt)(l.l,{mdxType:"RunnableCode"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { Ethereum } from "ibcf-sdk";\nimport { ethers } from "ethers";\n\nconst ETHEREUM_RPC = "https://goerli.infura.io/v3/75829a5785c844bc9c9e6e891130ee6f";\nconst ETHEREUM_DAPP = "0x715E4360a220a5e021dE5413F5c6314EDC234AC3";\nconst BLOCK_NUMBER = 8339150;\n\nconst provider = new ethers.providers.JsonRpcProvider(ETHEREUM_RPC);\n\nconst proofGenerator = new Ethereum.ProofGenerator(provider);\n\n// EVM storage slot indexes (Each slot index is identified by 32 bytes)\n// - storage index 0 ...\n// - storage index 1 -> mapping(uint => string) action_registry;\nconst actionRegistryIndex = "1".padStart(64, "0");\n\n// Key encoded as an EVM storage slot (32 bytes)\nconst key = "1".padStart(64, "0");\n\n// Storage slots\n// - Each mapping slot is the result of keccak256(<key> +  <slot_index>)\nconst actionSlot = ethers.utils.keccak256("0x" + key + actionRegistryIndex);\nproofGenerator\n  .generateStorageProof(ETHEREUM_DAPP, [actionSlot], BLOCK_NUMBER)\n  .then(console.log);\n'))))}m.isMDXComponent=!0},13411:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=13411,e.exports=t},88677:()=>{},62808:()=>{},35883:()=>{},46601:()=>{},89214:()=>{},52361:()=>{},94616:()=>{},62183:()=>{},13024:()=>{},62715:()=>{},13611:()=>{},28353:()=>{},1210:()=>{},43454:()=>{}}]);
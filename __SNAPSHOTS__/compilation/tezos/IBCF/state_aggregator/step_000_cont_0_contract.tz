parameter (or (pair %insert (bytes %key) (bytes %value)) (unit %snapshot_merkle_tree));
storage   (pair (set %administrators address) (pair (map %bytes_to_bits bytes string) (pair (big_map %merkle_history nat (pair (map %nodes bytes (map int (pair (pair %label (string %data) (nat %length)) (bytes %node)))) (pair (bytes %root) (pair (pair %root_edge (pair %label (string %data) (nat %length)) (bytes %node)) (map %states bytes bytes))))) (pair %tree (map %nodes bytes (map int (pair (pair %label (string %data) (nat %length)) (bytes %node)))) (pair (bytes %root) (pair (pair %root_edge (pair %label (string %data) (nat %length)) (bytes %node)) (map %states bytes bytes)))))));
code
  {
    LAMBDA
      (pair (pair (pair (pair string nat) bytes) (pair (pair string nat) bytes)) (pair (set address) (pair (map bytes string) (pair (big_map nat (pair (map bytes (map int (pair (pair string nat) bytes))) (pair bytes (pair (pair (pair string nat) bytes) (map bytes bytes))))) (pair (map bytes (map int (pair (pair string nat) bytes))) (pair bytes (pair (pair (pair string nat) bytes) (map bytes bytes))))))))
      (pair (pair (pair string nat) bytes) (pair (set address) (pair (map bytes string) (pair (big_map nat (pair (map bytes (map int (pair (pair string nat) bytes))) (pair bytes (pair (pair (pair string nat) bytes) (map bytes bytes))))) (pair (map bytes (map int (pair (pair string nat) bytes))) (pair bytes (pair (pair (pair string nat) bytes) (map bytes bytes))))))))
      {
        UNPAIR;     
        EMPTY_MAP int (pair (pair string nat) bytes); 
        PUSH int 0; 
        EMPTY_MAP int (pair (pair (pair (pair string nat) bytes) (pair (option bytes) (option int))) (pair (pair (pair string nat) (option (map int (pair (pair string nat) bytes)))) (pair (option (pair string nat)) bytes))); 
        DUP 4;      
        GET 4;      
        NONE (pair string nat); 
        PAIR;       
        NONE (map int (pair (pair string nat) bytes)); 
        DUP 6;      
        GET 3;      
        PAIR;       
        PAIR;       
        PUSH (pair (option bytes) (option int)) (Pair None None); 
        DUP 6;      
        CAR;        
        PAIR;       
        PAIR;       
        SOME;       
        PUSH int 1; 
        UPDATE;     
        PUSH int 1; 
        PUSH bool True; 
        PUSH int 0; 
        DUP 3;      
        COMPARE;    
        GT;         
        LOOP
          {
            DUP 3;      
            DUP 3;      
            GET;        
            IF_NONE
              {
                PUSH int 155; 
                FAILWITH;   
              }
              {}; 
            UNPAIR;     
            UNPAIR 3;   
            DIG 3;      
            UNPAIR;     
            UNPAIR;     
            DIG 2;      
            UNPAIR;     
            DUP 8;      
            IF
              {
                DIG 7;      
                DROP;       
                DIG 7;      
                DROP;       
                DIG 7;      
                DROP;       
                PUSH bool False; 
                DUG 7;      
                PUSH int 0; 
                DUG 8;      
                EMPTY_MAP int (pair (pair (pair (pair string nat) bytes) (pair (option bytes) (option int))) (pair (pair (pair string nat) (option (map int (pair (pair string nat) bytes)))) (pair (option (pair string nat)) bytes))); 
                DUG 9;      
              }
              {}; 
            PUSH int 0; 
            DUP 12;     
            COMPARE;    
            GT;         
            IF
              {
                PUSH int 0; 
                DUP 10;     
                COMPARE;    
                GT;         
              }
              {
                PUSH bool False; 
              }; 
            IF
              {
                SWAP;       
                DROP;       
                SWAP;       
                DROP;       
                DIG 2;      
                DROP;       
                DIG 6;      
                NONE (pair (pair (pair (pair string nat) bytes) (pair (option bytes) (option int))) (pair (pair (pair string nat) (option (map int (pair (pair string nat) bytes)))) (pair (option (pair string nat)) bytes))); 
                DUP 8;      
                UPDATE;     
                DUG 6;      
                PUSH int 1; 
                DIG 6;      
                SUB;        
                DUG 5;      
                SWAP;       
                IF_NONE
                  {
                    PUSH int 175; 
                    FAILWITH;   
                  }
                  {}; 
                DUP 9;      
                DUP 9;      
                GET;        
                IF_NONE
                  {
                    PUSH int 174; 
                    FAILWITH;   
                  }
                  {}; 
                SOME;       
                DIG 4;      
                IF_NONE
                  {
                    PUSH int 176; 
                    FAILWITH;   
                  }
                  {}; 
                UPDATE;     
                DIG 9;      
                DUP;        
                GET 6;      
                DUP;        
                CAR;        
                NONE (map int (pair (pair string nat) bytes)); 
                DIG 6;      
                IF_NONE
                  {
                    PUSH int 178; 
                    FAILWITH;   
                  }
                  {}; 
                UPDATE;     
                UPDATE 1;   
                UPDATE 6;   
                DUP;        
                GET 6;      
                DUP;        
                CAR;        
                DIG 3;      
                DUP;        
                SOME;       
                SWAP;       
                DUP;        
                DUG 5;      
                PUSH int 1; 
                GET;        
                IF_NONE
                  {
                    PUSH int 59; 
                    FAILWITH;   
                  }
                  {}; 
                CDR;        
                DUP 6;      
                PUSH int 0; 
                GET;        
                IF_NONE
                  {
                    PUSH int 59; 
                    FAILWITH;   
                  }
                  {}; 
                CDR;        
                CONCAT;     
                KECCAK;     
                UPDATE;     
                UPDATE 1;   
                UPDATE 6;   
                DUG 8;      
                DIG 6;      
                SWAP;       
                DUP;        
                DUG 2;      
                PUSH int 1; 
                GET;        
                IF_NONE
                  {
                    PUSH int 59; 
                    FAILWITH;   
                  }
                  {}; 
                CDR;        
                DIG 2;      
                PUSH int 0; 
                GET;        
                IF_NONE
                  {
                    PUSH int 59; 
                    FAILWITH;   
                  }
                  {}; 
                CDR;        
                CONCAT;     
                KECCAK;     
                DIG 2;      
                IF_NONE
                  {
                    PUSH int 181; 
                    FAILWITH;   
                  }
                  {}; 
                PAIR;       
                SOME;       
                DUP 6;      
                UPDATE;     
                DUG 4;      
              }
              {
                DUP 5;      
                CAR;        
                CDR;        
                DUP 4;      
                CDR;        
                COMPARE;    
                GE;         
                IF
                  {}
                  {
                    PUSH string "Key length mismatch"; 
                    FAILWITH;   
                  }; 
                DUP 3;      
                CAR;        
                SIZE;       
                DUP 6;      
                CAR;        
                CAR;        
                SIZE;       
                DUP;        
                DUP 3;      
                COMPARE;    
                LT;         
                IF
                  {
                    SWAP;       
                    DUP;        
                    DUG 2;      
                  }
                  {
                    DUP;        
                  }; 
                PUSH nat 0; 
                PUSH bool False; 
                DUP 3;      
                DUP 3;      
                COMPARE;    
                LT;         
                LOOP
                  {
                    DUP 10;     
                    CAR;        
                    CAR;        
                    PUSH nat 1; 
                    DUP 4;      
                    SLICE;      
                    IF_NONE
                      {
                        PUSH string "OUT_OF_BOUNDS"; 
                        FAILWITH;   
                      }
                      {}; 
                    DUP 9;      
                    CAR;        
                    PUSH nat 1; 
                    DUP 5;      
                    SLICE;      
                    IF_NONE
                      {
                        PUSH string "OUT_OF_BOUNDS"; 
                        FAILWITH;   
                      }
                      {}; 
                    COMPARE;    
                    EQ;         
                    IF
                      {
                        PUSH nat 1; 
                        DIG 2;      
                        ADD;        
                        SWAP;       
                      }
                      {
                        DROP;       
                        PUSH bool True; 
                      }; 
                    DUP;        
                    IF
                      {
                        PUSH bool False; 
                      }
                      {
                        DUP 3;      
                        DUP 3;      
                        COMPARE;    
                        LT;         
                      }; 
                  }; 
                DUP 8;      
                CAR;        
                SIZE;       
                DUP 3;      
                COMPARE;    
                LE;         
                IF
                  {
                    PUSH nat 256; 
                    DUP 3;      
                    COMPARE;    
                    LE;         
                  }
                  {
                    PUSH bool False; 
                  }; 
                IF
                  {}
                  {
                    PUSH string "Bad pos"; 
                    FAILWITH;   
                  }; 
                SWAP;       
                DUP;        
                DUG 2;      
                PUSH string ""; 
                PAIR;       
                PUSH nat 0; 
                DUP 4;      
                COMPARE;    
                NEQ;        
                IF
                  {
                    DUP 9;      
                    CAR;        
                    DUP 4;      
                    PUSH nat 0; 
                    SLICE;      
                    IF_NONE
                      {
                        PUSH string "Out of bounds"; 
                        FAILWITH;   
                      }
                      {}; 
                    UPDATE 1;   
                  }
                  {}; 
                DUP 3;      
                DUP 10;     
                CAR;        
                SIZE;       
                SUB;        
                ISNAT;      
                IF_NONE
                  {
                    PUSH string "underflow"; 
                    FAILWITH;   
                  }
                  {}; 
                DUP 10;     
                CAR;        
                DUP 5;      
                DUP 12;     
                CAR;        
                SIZE;       
                SUB;        
                ISNAT;      
                IF_NONE
                  {
                    PUSH string "underflow"; 
                    FAILWITH;   
                  }
                  {}; 
                DUP 6;      
                SLICE;      
                IF_NONE
                  {
                    PUSH string "Out of bounds"; 
                    FAILWITH;   
                  }
                  {}; 
                PAIR;       
                SWAP;       
                DUP;        
                DUG 2;      
                PUSH nat 0; 
                DUP 3;      
                CDR;        
                COMPARE;    
                EQ;         
                IF
                  {
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    PUSH int 1; 
                    DIG 6;      
                    ADD;        
                    DUG 5;      
                    DIG 6;      
                    DUG 2;      
                    PAIR;       
                    SOME;       
                    DUP 6;      
                    UPDATE;     
                    DUG 4;      
                  }
                  {
                    DUP 13;     
                    CAR;        
                    CDR;        
                    SWAP;       
                    DUP;        
                    DUG 2;      
                    CDR;        
                    COMPARE;    
                    LT;         
                    IF
                      {
                        PUSH nat 0; 
                        DUP 3;      
                        CDR;        
                        COMPARE;    
                        GT;         
                        IF
                          {}
                          {
                            PUSH string "EMPTY_LABEL"; 
                            FAILWITH;   
                          }; 
                        PUSH string "0"; 
                        DUP 3;      
                        CAR;        
                        PUSH nat 1; 
                        PUSH nat 0; 
                        SLICE;      
                        IF_NONE
                          {
                            PUSH int 0; 
                            FAILWITH;   
                          }
                          {}; 
                        COMPARE;    
                        EQ;         
                        IF
                          {
                            PUSH int 0; 
                          }
                          {
                            PUSH int 1; 
                          }; 
                        PUSH nat 1; 
                        DUP 4;      
                        CDR;        
                        SUB;        
                        ISNAT;      
                        IF_NONE
                          {
                            PUSH int 0; 
                            FAILWITH;   
                          }
                          {}; 
                        DUP 4;      
                        CAR;        
                        PUSH nat 1; 
                        DUP 6;      
                        CDR;        
                        SUB;        
                        ISNAT;      
                        IF_NONE
                          {
                            PUSH int 0; 
                            FAILWITH;   
                          }
                          {}; 
                        PUSH nat 1; 
                        SLICE;      
                        IF_NONE
                          {
                            PUSH string "OUT_OF_BOUNDS"; 
                            FAILWITH;   
                          }
                          {}; 
                        PAIR;       
                        SWAP;       
                        DUP;        
                        DUG 2;      
                        EMPTY_MAP int (pair (pair string nat) bytes); 
                        DUP 14;     
                        DUP 4;      
                        PAIR;       
                        SOME;       
                        DUP 3;      
                        UPDATE;     
                        PUSH nat 1; 
                        DUP 6;      
                        CDR;        
                        ADD;        
                        DUP 18;     
                        CAR;        
                        CDR;        
                        SUB;        
                        ISNAT;      
                        IF_NONE
                          {
                            PUSH string "PREFIX_TOO_LONG"; 
                            FAILWITH;   
                          }
                          {}; 
                        DUP;        
                        PUSH nat 0; 
                        COMPARE;    
                        EQ;         
                        IF
                          {
                            DROP;       
                            DIG 2;      
                            DROP;       
                            DIG 2;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            PUSH (pair string nat) (Pair "" 0); 
                          }
                          {
                            DIG 3;      
                            DROP;       
                            DIG 3;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 4;      
                            DROP;       
                            DIG 5;      
                            DROP;       
                            DIG 5;      
                            DROP;       
                            DUP;        
                            DUP 6;      
                            CAR;        
                            CAR;        
                            DIG 2;      
                            PUSH nat 1; 
                            DUP 7;      
                            CDR;        
                            ADD;        
                            SLICE;      
                            IF_NONE
                              {
                                PUSH string "PREFIX_LONGER_THAN_DATA"; 
                                FAILWITH;   
                              }
                              {}; 
                            PAIR;       
                          }; 
                        SWAP;       
                        DIG 4;      
                        CDR;        
                        DIG 2;      
                        PAIR;       
                        SOME;       
                        DIG 2;      
                        PUSH int 1; 
                        SUB;        
                        UPDATE;     
                        PUSH int 1; 
                        DIG 6;      
                        ADD;        
                        DUG 5;      
                        DIG 8;      
                        DUP;        
                        GET 6;      
                        DUP;        
                        CAR;        
                        DIG 3;      
                        DUP;        
                        SOME;       
                        SWAP;       
                        DUP;        
                        DUG 5;      
                        PUSH int 1; 
                        GET;        
                        IF_NONE
                          {
                            PUSH int 59; 
                            FAILWITH;   
                          }
                          {}; 
                        CDR;        
                        DUP 6;      
                        PUSH int 0; 
                        GET;        
                        IF_NONE
                          {
                            PUSH int 59; 
                            FAILWITH;   
                          }
                          {}; 
                        CDR;        
                        CONCAT;     
                        KECCAK;     
                        UPDATE;     
                        UPDATE 1;   
                        UPDATE 6;   
                        DUG 8;      
                        DIG 6;      
                        SWAP;       
                        DUP;        
                        DUG 2;      
                        PUSH int 1; 
                        GET;        
                        IF_NONE
                          {
                            PUSH int 59; 
                            FAILWITH;   
                          }
                          {}; 
                        CDR;        
                        DIG 2;      
                        PUSH int 0; 
                        GET;        
                        IF_NONE
                          {
                            PUSH int 59; 
                            FAILWITH;   
                          }
                          {}; 
                        CDR;        
                        CONCAT;     
                        KECCAK;     
                        DIG 2;      
                        PAIR;       
                        SOME;       
                        DUP 6;      
                        UPDATE;     
                        DUG 4;      
                      }
                      {
                        DIG 2;      
                        DROP;       
                        DIG 2;      
                        DROP;       
                        DIG 2;      
                        DROP;       
                        DIG 2;      
                        DROP;       
                        DIG 2;      
                        DROP;       
                        DIG 2;      
                        DROP;       
                        DIG 2;      
                        DROP;       
                        DIG 3;      
                        DROP;       
                        DIG 3;      
                        DROP;       
                        DIG 4;      
                        DROP;       
                        DIG 4;      
                        DROP;       
                        PUSH nat 1; 
                        DUP 3;      
                        CDR;        
                        COMPARE;    
                        GT;         
                        IF
                          {}
                          {
                            PUSH string "Bad key"; 
                            FAILWITH;   
                          }; 
                        PUSH nat 0; 
                        DUP 3;      
                        CDR;        
                        COMPARE;    
                        GT;         
                        IF
                          {}
                          {
                            PUSH string "EMPTY_LABEL"; 
                            FAILWITH;   
                          }; 
                        PUSH string "0"; 
                        DUP 3;      
                        CAR;        
                        PUSH nat 1; 
                        PUSH nat 0; 
                        SLICE;      
                        IF_NONE
                          {
                            PUSH int 0; 
                            FAILWITH;   
                          }
                          {}; 
                        COMPARE;    
                        EQ;         
                        IF
                          {
                            PUSH int 0; 
                          }
                          {
                            PUSH int 1; 
                          }; 
                        PUSH nat 1; 
                        DUP 4;      
                        CDR;        
                        SUB;        
                        ISNAT;      
                        IF_NONE
                          {
                            PUSH int 0; 
                            FAILWITH;   
                          }
                          {}; 
                        DUP 4;      
                        CAR;        
                        PUSH nat 1; 
                        DIG 5;      
                        CDR;        
                        SUB;        
                        ISNAT;      
                        IF_NONE
                          {
                            PUSH int 0; 
                            FAILWITH;   
                          }
                          {}; 
                        PUSH nat 1; 
                        SLICE;      
                        IF_NONE
                          {
                            PUSH string "OUT_OF_BOUNDS"; 
                            FAILWITH;   
                          }
                          {}; 
                        PAIR;       
                        SWAP;       
                        DUP 12;     
                        GET 7;      
                        DUP 6;      
                        CDR;        
                        GET;        
                        IF_NONE
                          {
                            PUSH int 224; 
                            FAILWITH;   
                          }
                          {}; 
                        PUSH int 1; 
                        DIG 8;      
                        ADD;        
                        DUG 7;      
                        DIG 8;      
                        DIG 5;      
                        DIG 5;      
                        SOME;       
                        PAIR;       
                        DUP 3;      
                        SOME;       
                        DIG 5;      
                        PAIR;       
                        PAIR;       
                        DUP 4;      
                        SOME;       
                        DIG 5;      
                        CDR;        
                        SOME;       
                        PAIR;       
                        DIG 3;      
                        DIG 4;      
                        GET;        
                        IF_NONE
                          {
                            PUSH int 228; 
                            FAILWITH;   
                          }
                          {}; 
                        PAIR;       
                        PAIR;       
                        SOME;       
                        DUP 4;      
                        UPDATE;     
                        DUG 2;      
                      }; 
                  }; 
              }; 
            PUSH int 0; 
            DUP 3;      
            COMPARE;    
            GT;         
          }; 
        DROP 3;     
        DIG 2;      
        DROP;       
        GET;        
        IF_NONE
          {
            PUSH int 237; 
            FAILWITH;   
          }
          {}; 
        PAIR;       
      }; 
    SWAP;       
    UNPAIR;     
    IF_LEFT
      {
        DUP;        
        CDR;        
        SIZE;       
        PUSH nat 1000; 
        COMPARE;    
        GT;         
        IF
          {}
          {
            PUSH string "STATE_TOO_LARGE"; 
            FAILWITH;   
          }; 
        DUP;        
        CAR;        
        PUSH string ""; 
        SWAP;       
        SENDER;     
        PACK;       
        CONCAT;     
        KECCAK;     
        SIZE;       
        PUSH nat 0; 
        DUP;        
        DUP 3;      
        COMPARE;    
        GT;         
        LOOP
          {
            DUP 5;      
            GET 3;      
            DUP 5;      
            CAR;        
            SENDER;     
            PACK;       
            CONCAT;     
            KECCAK;     
            PUSH nat 1; 
            DUP 4;      
            SLICE;      
            IF_NONE
              {
                PUSH string "Out of bonds"; 
                FAILWITH;   
              }
              {}; 
            GET;        
            IF_NONE
              {
                PUSH int 29; 
                FAILWITH;   
              }
              {}; 
            DIG 3;      
            CONCAT;     
            DUG 2;      
            PUSH nat 1; 
            ADD;        
            DUP;        
            DUP 3;      
            COMPARE;    
            GT;         
          }; 
        DROP 2;     
        NIL bytes;  
        DUP 3;      
        CDR;        
        CONS;       
        DUP 3;      
        CAR;        
        CONS;       
        SENDER;     
        PACK;       
        CONS;       
        CONCAT;     
        KECCAK;     
        DIG 3;      
        DUP;        
        GET 6;      
        DUP;        
        GET 6;      
        DUP 6;      
        CDR;        
        SOME;       
        DUP 5;      
        UPDATE;     
        UPDATE 6;   
        UPDATE 6;   
        DUG 3;      
        DUP;        
        PUSH nat 256; 
        DUP 4;      
        PAIR;       
        PAIR;       
        PUSH bytes 0x; 
        DUP 6;      
        GET 9;      
        COMPARE;    
        NEQ;        
        IF
          {
            DROP;       
            DIG 2;      
            DROP;       
            DIG 3;      
            SWAP;       
            PUSH nat 256; 
            DIG 3;      
            PAIR;       
            DUP 4;      
            GET 11;     
            PAIR 3;     
            SWAP;       
            DUG 2;      
            PAIR;       
            EXEC;       
            UNPAIR;     
          }
          {
            SWAP;       
            DROP;       
            SWAP;       
            DROP;       
            SWAP;       
            DROP;       
            DIG 2;      
            DROP;       
          }; 
        SWAP;       
        DUP;        
        GET 6;      
        DUP 3;      
        CDR;        
        UPDATE 3;   
        UPDATE 6;   
        DUP;        
        GET 6;      
        DIG 2;      
        UPDATE 5;   
        UPDATE 6;   
      }
      {
        SWAP;       
        DUP;        
        DUG 2;      
        CAR;        
        SENDER;     
        MEM;        
        IF
          {}
          {
            PUSH string "NOT_ALLOWED"; 
            FAILWITH;   
          }; 
        SWAP;       
        DUP;        
        DUG 2;      
        GET 5;      
        LEVEL;      
        MEM;        
        IF
          {
            PUSH string "LEVEL_ALREADY_USED"; 
            FAILWITH;   
          }
          {}; 
        SWAP;       
        DUP;        
        DUG 2;      
        DUP;        
        GET 5;      
        DUP 4;      
        GET 6;      
        SOME;       
        LEVEL;      
        DIG 5;      
        DROP;       
        UPDATE;     
        UPDATE 5;   
        EMPTY_MAP bytes bytes; 
        PUSH (pair (pair string nat) bytes) (Pair (Pair "" 0) 0x); 
        PUSH bytes 0x; 
        EMPTY_MAP bytes (map int (pair (pair string nat) bytes)); 
        PAIR 4;     
        DIG 2;      
        DROP;       
        DIG 2;      
        DROP;       
        UPDATE 6;   
      }; 
    NIL operation; 
    PAIR;       
  };
view
  "get_proof" (pair (bytes %key) (pair (nat %level) (address %owner))) (pair (nat %level) (pair (bytes %merkle_root) (list %proof (or (bytes %Left) (bytes %Right)))))
  {
    UNPAIR;     
    PUSH string ""; 
    SWAP;       
    DUP;        
    CAR;        
    SWAP;       
    DUP;        
    DUG 3;      
    GET 4;      
    PACK;       
    CONCAT;     
    KECCAK;     
    SIZE;       
    PUSH nat 0; 
    DUP;        
    DUP 3;      
    COMPARE;    
    GT;         
    LOOP
      {
        DUP 5;      
        GET 3;      
        DIG 4;      
        DUP;        
        CAR;        
        SWAP;       
        DUP;        
        DUG 6;      
        GET 4;      
        PACK;       
        CONCAT;     
        KECCAK;     
        PUSH nat 1; 
        DUP 4;      
        SLICE;      
        IF_NONE
          {
            PUSH string "Out of bonds"; 
            FAILWITH;   
          }
          {}; 
        GET;        
        IF_NONE
          {
            PUSH int 29; 
            FAILWITH;   
          }
          {}; 
        DIG 3;      
        CONCAT;     
        DUG 2;      
        PUSH nat 1; 
        ADD;        
        DUP;        
        DUP 3;      
        COMPARE;    
        GT;         
      }; 
    DROP 2;     
    DUP;        
    PUSH nat 256; 
    SWAP;       
    PAIR;       
    DUP 4;      
    GET 5;      
    DUP 4;      
    GET 3;      
    GET;        
    IF_NONE
      {
        PUSH int 300; 
        FAILWITH;   
      }
      {}; 
    DUP;        
    GET 5;      
    NIL (or bytes bytes); 
    PUSH bool True; 
    DUP;        
    LOOP
      {
        DUP 5;      
        CAR;        
        SIZE;       
        DUP 4;      
        CAR;        
        CAR;        
        SIZE;       
        DUP;        
        DUP 3;      
        COMPARE;    
        LT;         
        IF
          {
            SWAP;       
            DUP;        
            DUG 2;      
          }
          {
            DUP;        
          }; 
        PUSH nat 0; 
        PUSH bool False; 
        DUP 3;      
        DUP 3;      
        COMPARE;    
        LT;         
        LOOP
          {
            DUP 8;      
            CAR;        
            CAR;        
            PUSH nat 1; 
            DUP 4;      
            SLICE;      
            IF_NONE
              {
                PUSH string "OUT_OF_BOUNDS"; 
                FAILWITH;   
              }
              {}; 
            DUP 11;     
            CAR;        
            PUSH nat 1; 
            DUP 5;      
            SLICE;      
            IF_NONE
              {
                PUSH string "OUT_OF_BOUNDS"; 
                FAILWITH;   
              }
              {}; 
            COMPARE;    
            EQ;         
            IF
              {
                PUSH nat 1; 
                DIG 2;      
                ADD;        
                SWAP;       
              }
              {
                DROP;       
                PUSH bool True; 
              }; 
            DUP;        
            IF
              {
                PUSH bool False; 
              }
              {
                DUP 3;      
                DUP 3;      
                COMPARE;    
                LT;         
              }; 
          }; 
        DUP 10;     
        CAR;        
        SIZE;       
        DUP 3;      
        COMPARE;    
        LE;         
        IF
          {
            PUSH nat 256; 
            DUP 3;      
            COMPARE;    
            LE;         
          }
          {
            PUSH bool False; 
          }; 
        IF
          {}
          {
            PUSH string "Bad pos"; 
            FAILWITH;   
          }; 
        SWAP;       
        DUP;        
        DUG 2;      
        PUSH string ""; 
        PAIR;       
        PUSH nat 0; 
        DUP 4;      
        COMPARE;    
        NEQ;        
        IF
          {
            DUP 11;     
            CAR;        
            DUP 4;      
            PUSH nat 0; 
            SLICE;      
            IF_NONE
              {
                PUSH string "Out of bounds"; 
                FAILWITH;   
              }
              {}; 
            UPDATE 1;   
          }
          {}; 
        DUP 3;      
        DUP 12;     
        CAR;        
        SIZE;       
        SUB;        
        ISNAT;      
        IF_NONE
          {
            PUSH string "underflow"; 
            FAILWITH;   
          }
          {}; 
        DUP 12;     
        CAR;        
        DUP 5;      
        DUP 14;     
        CAR;        
        SIZE;       
        SUB;        
        ISNAT;      
        IF_NONE
          {
            PUSH string "underflow"; 
            FAILWITH;   
          }
          {}; 
        DUP 6;      
        SLICE;      
        IF_NONE
          {
            PUSH string "Out of bounds"; 
            FAILWITH;   
          }
          {}; 
        PAIR;       
        SWAP;       
        DUP;        
        DUG 2;      
        DUP 11;     
        CAR;        
        CDR;        
        SWAP;       
        DUP;        
        DUG 2;      
        CDR;        
        COMPARE;    
        EQ;         
        IF
          {}
          {
            PUSH string "NOT_FOUND"; 
            FAILWITH;   
          }; 
        PUSH nat 0; 
        DUP 3;      
        CDR;        
        COMPARE;    
        EQ;         
        IF
          {
            DIG 8;      
            DROP 9;     
            PUSH bool False; 
          }
          {
            DIG 12;     
            DROP 2;     
            SWAP;       
            DROP;       
            SWAP;       
            DROP;       
            SWAP;       
            DROP;       
            SWAP;       
            DROP;       
            SWAP;       
            DROP;       
            SWAP;       
            DROP;       
            DUP;        
            CDR;        
            PUSH nat 0; 
            COMPARE;    
            LT;         
            IF
              {}
              {
                PUSH string "EMPTY_LABEL"; 
                FAILWITH;   
              }; 
            DUP;        
            CAR;        
            PUSH string "0"; 
            SWAP;       
            PUSH nat 1; 
            PUSH nat 0; 
            SLICE;      
            IF_NONE
              {
                PUSH int 0; 
                FAILWITH;   
              }
              {}; 
            COMPARE;    
            EQ;         
            IF
              {
                PUSH int 0; 
              }
              {
                PUSH int 1; 
              }; 
            PUSH nat 1; 
            DUP 3;      
            CDR;        
            SUB;        
            ISNAT;      
            IF_NONE
              {
                PUSH int 0; 
                FAILWITH;   
              }
              {}; 
            DUP 3;      
            CAR;        
            PUSH nat 1; 
            DIG 4;      
            CDR;        
            SUB;        
            ISNAT;      
            IF_NONE
              {
                PUSH int 0; 
                FAILWITH;   
              }
              {}; 
            PUSH nat 1; 
            SLICE;      
            IF_NONE
              {
                PUSH string "OUT_OF_BOUNDS"; 
                FAILWITH;   
              }
              {}; 
            PAIR;       
            SWAP;       
            DUP;        
            PUSH int 0; 
            COMPARE;    
            EQ;         
            IF
              {
                DUP 6;      
                CAR;        
                DUP 6;      
                CDR;        
                GET;        
                IF_NONE
                  {
                    PUSH int 335; 
                    FAILWITH;   
                  }
                  {}; 
                PUSH int 1; 
                GET;        
                IF_NONE
                  {
                    PUSH int 335; 
                    FAILWITH;   
                  }
                  {}; 
                CDR;        
                RIGHT bytes; 
              }
              {
                DUP 6;      
                CAR;        
                DUP 6;      
                CDR;        
                GET;        
                IF_NONE
                  {
                    PUSH int 337; 
                    FAILWITH;   
                  }
                  {}; 
                PUSH int 0; 
                GET;        
                IF_NONE
                  {
                    PUSH int 337; 
                    FAILWITH;   
                  }
                  {}; 
                CDR;        
                LEFT bytes; 
              }; 
            DIG 4;      
            SWAP;       
            CONS;       
            DUG 3;      
            DUP 6;      
            CAR;        
            DIG 5;      
            CDR;        
            GET;        
            IF_NONE
              {
                PUSH int 340; 
                FAILWITH;   
              }
              {}; 
            SWAP;       
            GET;        
            IF_NONE
              {
                PUSH int 340; 
                FAILWITH;   
              }
              {}; 
            DUG 3;      
            DUG 4;      
          }; 
        DUP;        
      }; 
    DROP;       
    SWAP;       
    DROP;       
    DIG 2;      
    DROP;       
    DIG 2;      
    DROP;       
    DIG 3;      
    DROP;       
    SWAP;       
    GET 3;      
    DIG 2;      
    GET 3;      
    PAIR 3;     
  };
view
  "verify_proof" (pair (nat %level) (pair (list %proof (or (bytes %Left) (bytes %Right))) (pair %state (bytes %key) (pair (bytes %owner) (bytes %value))))) unit
  {
    UNPAIR;     
    DUP;        
    GET 8;      
    NIL bytes;  
    SWAP;       
    CONS;       
    SWAP;       
    DUP;        
    DUG 2;      
    GET 5;      
    CONS;       
    SWAP;       
    DUP;        
    DUG 2;      
    GET 7;      
    CONS;       
    CONCAT;     
    KECCAK;     
    SWAP;       
    DUP;        
    DUG 2;      
    GET 3;      
    ITER
      {
        IF_LEFT
          {
            CONCAT;     
            KECCAK;     
          }
          {
            SWAP;       
            CONCAT;     
            KECCAK;     
          }; 
      }; 
    DUP 3;      
    GET 5;      
    DUP 3;      
    CAR;        
    MEM;        
    IF
      {
        DIG 2;      
        GET 5;      
        DIG 2;      
        CAR;        
        GET;        
        IF_NONE
          {
            PUSH int 369; 
            FAILWITH;   
          }
          {}; 
        GET 3;      
        COMPARE;    
        EQ;         
      }
      {
        DROP 3;     
        PUSH bool False; 
      }; 
    IF
      {}
      {
        PUSH string "PROOF_INVALID"; 
        FAILWITH;   
      }; 
    UNIT;       
  };
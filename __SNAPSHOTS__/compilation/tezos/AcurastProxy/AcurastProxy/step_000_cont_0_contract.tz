parameter (or (or (list %configure (or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))))) (pair %fulfill (nat %job_id) (bytes %payload))) (or (pair %receive_actions (list %leaves (pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)))) (pair (nat %mmr_size) (pair (list %proof bytes) (nat %snapshot)))) (list %send_actions (pair (string %kind) (bytes %payload)))));
storage   (pair (pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id)) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            SENDER;     # @sender : @parameter%configure : @storage
            DUP 3;      # @storage : @sender : @parameter%configure : @storage
            CAR;        # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : @sender : @parameter%configure : @storage
            CAR;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : @sender : @parameter%configure : @storage
            CAR;        # address : @sender : @parameter%configure : @storage
            COMPARE;    # int : @parameter%configure : @storage
            EQ;         # bool : @parameter%configure : @storage
            IF
              {}
              {
                PUSH string "NOT_GOVERNANCE"; # string : @parameter%configure : @storage
                FAILWITH;   # FAILED
              }; # @parameter%configure : @storage
            DUP;        # @parameter%configure : @parameter%configure : @storage
            ITER
              {
                DUP;        # or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure : @storage
                IF_LEFT
                  {
                    SWAP;       # or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : address : @parameter%configure : @storage
                    DROP;       # address : @parameter%configure : @storage
                    DIG 2;      # @storage : address : @parameter%configure
                    UNPAIR;     # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : address : @parameter%configure
                    UNPAIR;     # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : address : @parameter%configure
                    DIG 3;      # address : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @parameter%configure
                    UPDATE 1;   # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @parameter%configure
                    PAIR;       # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @parameter%configure
                    PAIR;       # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : @parameter%configure
                    SWAP;       # @parameter%configure : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                  }
                  {
                    IF_LEFT
                      {
                        DUP;        # list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure : @storage
                        ITER
                          {
                            IF_LEFT
                              {
                                DIG 4;      # @storage : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                UNPAIR;     # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                UNPAIR;     # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                DUP;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                GET 3;      # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                DUP 5;      # pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                CAR;        # pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                SOME;       # option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                DIG 5;      # pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                CDR;        # string : option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                UPDATE;     # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                UPDATE 3;   # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                PAIR;       # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                PAIR;       # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                DUG 3;      # list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                              }
                              {
                                DIG 4;      # @storage : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                UNPAIR;     # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                UNPAIR;     # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                DUP;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                GET 3;      # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                NONE (pair (lambda (pair (pair (pair nat (big_map nat address)) (pair bytes (pair bytes nat))) (list operation)) (pair (pair (pair nat (big_map nat address)) (pair bytes nat)) (list operation))) (pair bytes nat)); # option (pair (lambda (pair (pair (pair nat (big_map nat address)) (pair bytes (pair bytes nat))) (list operation)) (pair (pair (pair nat (big_map nat address)) (pair bytes nat)) (list operation))) (pair bytes nat)) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                DIG 5;      # string : option (pair (lambda (pair (pair (pair nat (big_map nat address)) (pair bytes (pair bytes nat))) (list operation)) (pair (pair (pair nat (big_map nat address)) (pair bytes nat)) (list operation))) (pair bytes nat)) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                UPDATE;     # big_map string (pair (lambda (pair (pair (pair nat (big_map nat address)) (pair bytes (pair bytes nat))) (list operation)) (pair (pair (pair nat (big_map nat address)) (pair bytes nat)) (list operation))) (pair bytes nat)) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                UPDATE 3;   # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                PAIR;       # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                PAIR;       # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                DUG 3;      # list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                              }; # list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : list (or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator))))) : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                          }; # list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure : @storage
                        DROP 2;     # @parameter%configure : @storage
                      }
                      {
                        IF_LEFT
                          {
                            SWAP;       # or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : address : @parameter%configure : @storage
                            DROP;       # address : @parameter%configure : @storage
                            DIG 2;      # @storage : address : @parameter%configure
                            UNPAIR;     # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : address : @parameter%configure
                            UNPAIR;     # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : address : @parameter%configure
                            DIG 3;      # address : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @parameter%configure
                            UPDATE 5;   # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @parameter%configure
                            PAIR;       # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @parameter%configure
                            PAIR;       # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : @parameter%configure
                            SWAP;       # @parameter%configure : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                          }
                          {
                            IF_LEFT
                              {
                                DUP;        # list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure : @storage
                                ITER
                                  {
                                    IF_LEFT
                                      {
                                        DIG 4;      # @storage : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        UNPAIR;     # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        UNPAIR;     # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        DUP;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        GET 7;      # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        DUP 5;      # pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        CAR;        # pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        SOME;       # option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        DIG 5;      # pair (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind) : option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        CDR;        # string : option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        UPDATE;     # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        UPDATE 7;   # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        PAIR;       # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        PAIR;       # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        DUG 3;      # list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                                      }
                                      {
                                        DIG 4;      # @storage : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        UNPAIR;     # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        UNPAIR;     # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        DUP;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        GET 7;      # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        NONE (pair (lambda (pair (pair (pair nat (big_map nat address)) (pair address (pair bytes (pair bytes nat)))) (list operation)) (pair (pair (pair nat (big_map nat address)) (pair bytes nat)) (list operation))) (pair bytes nat)); # option (pair (lambda (pair (pair (pair nat (big_map nat address)) (pair address (pair bytes (pair bytes nat)))) (list operation)) (pair (pair (pair nat (big_map nat address)) (pair bytes nat)) (list operation))) (pair bytes nat)) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : string : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        DIG 5;      # string : option (pair (lambda (pair (pair (pair nat (big_map nat address)) (pair address (pair bytes (pair bytes nat)))) (list operation)) (pair (pair (pair nat (big_map nat address)) (pair bytes nat)) (list operation))) (pair bytes nat)) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        UPDATE;     # big_map string (pair (lambda (pair (pair (pair nat (big_map nat address)) (pair address (pair bytes (pair bytes nat)))) (list operation)) (pair (pair (pair nat (big_map nat address)) (pair bytes nat)) (list operation))) (pair bytes nat)) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        UPDATE 7;   # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        PAIR;       # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        PAIR;       # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure
                                        DUG 3;      # list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                                      }; # list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : list (or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator))))) : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                                  }; # list (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove)) : or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : @parameter%configure : @storage
                                DROP 2;     # @parameter%configure : @storage
                              }
                              {
                                SWAP;       # or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator)))) : address : @parameter%configure : @storage
                                DROP;       # address : @parameter%configure : @storage
                                DIG 2;      # @storage : address : @parameter%configure
                                UNPAIR;     # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : address : @parameter%configure
                                UNPAIR;     # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : address : @parameter%configure
                                DIG 3;      # address : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @parameter%configure
                                UPDATE 8;   # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @parameter%configure
                                PAIR;       # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @parameter%configure
                                PAIR;       # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : @parameter%configure
                                SWAP;       # @parameter%configure : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                              }; # list (or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator))))) : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                          }; # list (or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator))))) : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                      }; # list (or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator))))) : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                  }; # list (or (address %update_governance_address) (or (list %update_ingoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (or (address %update_merkle_aggregator) (or (list %update_outgoing_actions (or (pair %add (pair %function (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) (string %kind)) (string %remove))) (address %update_proof_validator))))) : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
              }; # @parameter%configure : @storage
            DROP;       # @storage
            NIL operation; # list operation : @storage
          }
          {
            NIL operation; # list operation : @parameter%fulfill : @storage
            DUP 3;      # @storage : list operation : @parameter%fulfill : @storage
            GET 3;      # big_map nat address : list operation : @parameter%fulfill : @storage
            DUP 3;      # @parameter%fulfill : big_map nat address : list operation : @parameter%fulfill : @storage
            CAR;        # nat : big_map nat address : list operation : @parameter%fulfill : @storage
            GET;        # option address : list operation : @parameter%fulfill : @storage
            IF_NONE
              {
                PUSH string "JOB_UNKNOWN"; # string : list operation : @parameter%fulfill : @storage
                FAILWITH;   # FAILED
              }
              {}; # @some : list operation : @parameter%fulfill : @storage
            CONTRACT %fulfill (pair (nat %job_id) (bytes %payload)); # option (contract (pair (nat %job_id) (bytes %payload))) : list operation : @parameter%fulfill : @storage
            IF_NONE
              {
                PUSH string "INVALID_CONTRACT"; # string : list operation : @parameter%fulfill : @storage
                FAILWITH;   # FAILED
              }
              {}; # @some : list operation : @parameter%fulfill : @storage
            PUSH mutez 0; # mutez : @some : list operation : @parameter%fulfill : @storage
            DIG 3;      # @parameter%fulfill : mutez : @some : list operation : @storage
            TRANSFER_TOKENS; # operation : list operation : @storage
            CONS;       # list operation : @storage
          }; # list operation : @storage
      }
      {
        IF_LEFT
          {
            DUP 2;      # @storage : @parameter%receive_actions : @storage
            CAR;        # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : @parameter%receive_actions : @storage
            CAR;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : @parameter%receive_actions : @storage
            GET 8;      # address : @parameter%receive_actions : @storage
            DUP 2;      # @parameter%receive_actions : address : @parameter%receive_actions : @storage
            GET 6;      # nat : address : @parameter%receive_actions : @storage
            DUP 3;      # @parameter%receive_actions : nat : address : @parameter%receive_actions : @storage
            GET 5;      # list bytes : nat : address : @parameter%receive_actions : @storage
            DUP 4;      # @parameter%receive_actions : list bytes : nat : address : @parameter%receive_actions : @storage
            GET 3;      # nat : list bytes : nat : address : @parameter%receive_actions : @storage
            DUP 5;      # @parameter%receive_actions : nat : list bytes : nat : address : @parameter%receive_actions : @storage
            CAR;        # list (pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos))) : nat : list bytes : nat : address : @parameter%receive_actions : @storage
            MAP
              {
                DUP;        # pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : nat : list bytes : nat : address : @parameter%receive_actions : @storage
                GET 4;      # nat : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : nat : list bytes : nat : address : @parameter%receive_actions : @storage
                SWAP;       # pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : nat : nat : list bytes : nat : address : @parameter%receive_actions : @storage
                DUP;        # pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : nat : nat : list bytes : nat : address : @parameter%receive_actions : @storage
                GET 3;      # nat : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : nat : nat : list bytes : nat : address : @parameter%receive_actions : @storage
                SWAP;       # pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : nat : nat : nat : list bytes : nat : address : @parameter%receive_actions : @storage
                CAR;        # bytes : nat : nat : nat : list bytes : nat : address : @parameter%receive_actions : @storage
                KECCAK;     # bytes : nat : nat : nat : list bytes : nat : address : @parameter%receive_actions : @storage
                PAIR 3;     # pair bytes (pair nat nat) : nat : list bytes : nat : address : @parameter%receive_actions : @storage
              }; # list (pair bytes (pair nat nat)) : nat : list bytes : nat : address : @parameter%receive_actions : @storage
            PAIR 4;     # pair (list (pair bytes (pair nat nat))) (pair nat (pair (list bytes) nat)) : address : @parameter%receive_actions : @storage
            VIEW "verify_proof" bool; # option bool : @parameter%receive_actions : @storage
            IF_NONE
              {
                PUSH string "INVALID_VIEW"; # string : @parameter%receive_actions : @storage
                FAILWITH;   # FAILED
              }
              {}; # @some : @parameter%receive_actions : @storage
            IF
              {}
              {
                PUSH string "INVALID_PROOF"; # string : @parameter%receive_actions : @storage
                FAILWITH;   # FAILED
              }; # @parameter%receive_actions : @storage
            NIL operation; # list operation : @parameter%receive_actions : @storage
            DUP 2;      # @parameter%receive_actions : list operation : @parameter%receive_actions : @storage
            CAR;        # list (pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos))) : list operation : @parameter%receive_actions : @storage
            ITER
              {
                DUP;        # pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : list operation : @parameter%receive_actions : @storage
                CAR;        # bytes : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : list operation : @parameter%receive_actions : @storage
                UNPACK (pair nat (pair string bytes)); # option (pair nat (pair string bytes)) : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : list operation : @parameter%receive_actions : @storage
                IF_NONE
                  {
                    DUP;        # pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : list operation : @parameter%receive_actions : @storage
                    CAR;        # bytes : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : list operation : @parameter%receive_actions : @storage
                    PUSH string "CANNOT_DECODE_ACTION"; # string : bytes : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : list operation : @parameter%receive_actions : @storage
                    PAIR;       # pair string bytes : pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : list operation : @parameter%receive_actions : @storage
                    FAILWITH;   # FAILED
                  }
                  {
                    SWAP;       # pair (bytes %data) (pair (nat %k_index) (nat %mmr_pos)) : @some : list operation : @parameter%receive_actions : @storage
                    DROP;       # @some : list operation : @parameter%receive_actions : @storage
                  }; # @some : list operation : @parameter%receive_actions : @storage
                DIG 3;      # @storage : @some : list operation : @parameter%receive_actions
                UNPAIR;     # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @some : list operation : @parameter%receive_actions
                UNPAIR;     # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @some : list operation : @parameter%receive_actions
                SWAP;       # nat : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @some : list operation : @parameter%receive_actions
                PUSH nat 1; # nat : nat : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @some : list operation : @parameter%receive_actions
                ADD;        # nat : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @some : list operation : @parameter%receive_actions
                SWAP;       # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @some : list operation : @parameter%receive_actions
                PAIR;       # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : @some : list operation : @parameter%receive_actions
                PAIR;       # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : @some : list operation : @parameter%receive_actions
                DUG 3;      # @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DUP 4;      # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CAR;        # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CDR;        # nat : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DUP 2;      # @some : nat : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CAR;        # nat : nat : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                COMPARE;    # int : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                EQ;         # bool : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                IF
                  {}
                  {
                    PUSH string "WrongCondition: compute_AcurastProxy_375.value.ingoing_action_id == self.data.ingoing_seq_id"; # string : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                    FAILWITH;   # FAILED
                  }; # @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DUP 4;      # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CAR;        # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CAR;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                GET 3;      # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DUP 2;      # @some : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                GET 3;      # string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                GET;        # option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                IF_NONE
                  {
                    PUSH string "INGOING_ACTION_NOT_SUPPORTED"; # string : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CAR;        # lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DUP 5;      # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CAR;        # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CAR;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                GET 3;      # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DUP 3;      # @some : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                GET 3;      # string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                GET;        # option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                IF_NONE
                  {
                    PUSH string "INGOING_ACTION_NOT_SUPPORTED"; # string : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CDR;        # pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DUP 3;      # @some : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                GET 4;      # bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DUP 7;      # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                GET 3;      # big_map nat address : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DUP 8;      # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : big_map nat address : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CAR;        # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : big_map nat address : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                CDR;        # nat : big_map nat address : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                PAIR;       # pair nat (big_map nat address) : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                PAIR 3;     # pair (pair nat (big_map nat address)) (pair bytes (pair (bytes %data) (nat %version))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                SWAP;       # lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (pair nat (big_map nat address)) (pair bytes (pair (bytes %data) (nat %version))) : @some : list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DIG 3;      # list operation : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (pair nat (big_map nat address)) (pair bytes (pair (bytes %data) (nat %version))) : @some : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DIG 2;      # pair (pair nat (big_map nat address)) (pair bytes (pair (bytes %data) (nat %version))) : list operation : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                PAIR;       # pair (pair (pair nat (big_map nat address)) (pair bytes (pair (bytes %data) (nat %version)))) (list operation) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : @some : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                EXEC;       # pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation) : @some : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                UNPAIR;     # pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @some : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
                DIG 4;      # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @some : @parameter%receive_actions
                DIG 4;      # @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @some
                DIG 3;      # list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some
                DUG 4;      # @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation
                DUG 4;      # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation : @parameter%receive_actions
                DUP 2;      # pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation : @parameter%receive_actions
                CAR;        # pair (nat %action_id) (big_map %job_destination nat address) : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation : @parameter%receive_actions
                CDR;        # big_map nat address : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation : @parameter%receive_actions
                UPDATE 3;   # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation : @parameter%receive_actions
                UNPAIR;     # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation : @parameter%receive_actions
                UNPAIR;     # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation : @parameter%receive_actions
                DUP;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation : @parameter%receive_actions
                GET 3;      # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation : @parameter%receive_actions
                DUP;        # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : list operation : @parameter%receive_actions
                DIG 6;      # @some : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%receive_actions
                GET 3;      # string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%receive_actions
                DUP;        # string : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%receive_actions
                DUG 2;      # string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%receive_actions
                GET;        # option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%receive_actions
                IF_NONE
                  {
                    PUSH int 401; # int : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%receive_actions
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%receive_actions
                DIG 6;      # pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%receive_actions
                CDR;        # pair (bytes %data) (nat %version) : @some : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%receive_actions
                UPDATE 2;   # @some : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%receive_actions
                SOME;       # option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%receive_actions
                SWAP;       # string : option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%receive_actions
                UPDATE;     # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%receive_actions
                UPDATE 3;   # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%receive_actions
                PAIR;       # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%receive_actions
                PAIR;       # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : list operation : @parameter%receive_actions
                DUG 2;      # list operation : @parameter%receive_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
              }; # list operation : @parameter%receive_actions : @storage
            SWAP;       # @parameter%receive_actions : list operation : @storage
            DROP;       # list operation : @storage
          }
          {
            NIL operation; # list operation : @parameter%send_actions : @storage
            DUP 2;      # @parameter%send_actions : list operation : @parameter%send_actions : @storage
            ITER
              {
                DIG 3;      # @storage : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                DUP;        # @storage : @storage : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                GET 4;      # nat : @storage : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                PUSH nat 1; # nat : nat : @storage : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                ADD;        # nat : @storage : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                UPDATE 4;   # @storage : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                DUG 3;      # pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                DUP 4;      # @storage : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CAR;        # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CAR;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                GET 7;      # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                DUP 2;      # pair (string %kind) (bytes %payload) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CAR;        # string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                GET;        # option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                IF_NONE
                  {
                    PUSH string "OUTGOING_ACTION_NOT_SUPPORTED"; # string : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CAR;        # lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                DUP 5;      # @storage : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CAR;        # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CAR;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                GET 7;      # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                DUP 3;      # pair (string %kind) (bytes %payload) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CAR;        # string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                GET;        # option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                IF_NONE
                  {
                    PUSH string "OUTGOING_ACTION_NOT_SUPPORTED"; # string : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CDR;        # pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                DUP 3;      # pair (string %kind) (bytes %payload) : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CDR;        # bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                DUP 7;      # @storage : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CAR;        # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                CAR;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                GET 5;      # address : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                DUP 8;      # @storage : address : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                GET 3;      # big_map nat address : address : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                DUP 9;      # @storage : big_map nat address : address : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                GET 4;      # nat : big_map nat address : address : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                PAIR;       # pair nat (big_map nat address) : address : bytes : pair (bytes %data) (nat %version) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                PAIR 4;     # pair (pair nat (big_map nat address)) (pair address (pair bytes (pair (bytes %data) (nat %version)))) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                SWAP;       # lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (pair nat (big_map nat address)) (pair address (pair bytes (pair (bytes %data) (nat %version)))) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions : @storage
                DIG 3;      # list operation : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (pair nat (big_map nat address)) (pair address (pair bytes (pair (bytes %data) (nat %version)))) : pair (string %kind) (bytes %payload) : @parameter%send_actions : @storage
                DIG 2;      # pair (pair nat (big_map nat address)) (pair address (pair bytes (pair (bytes %data) (nat %version)))) : list operation : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : @parameter%send_actions : @storage
                PAIR;       # pair (pair (pair nat (big_map nat address)) (pair address (pair bytes (pair (bytes %data) (nat %version))))) (list operation) : lambda (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation)) : pair (string %kind) (bytes %payload) : @parameter%send_actions : @storage
                EXEC;       # pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation) : pair (string %kind) (bytes %payload) : @parameter%send_actions : @storage
                UNPAIR;     # pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : pair (string %kind) (bytes %payload) : @parameter%send_actions : @storage
                DIG 4;      # @storage : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : pair (string %kind) (bytes %payload) : @parameter%send_actions
                DIG 4;      # @parameter%send_actions : @storage : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : pair (string %kind) (bytes %payload)
                DIG 3;      # list operation : @parameter%send_actions : @storage : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload)
                DUG 4;      # @parameter%send_actions : @storage : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation
                DUG 4;      # @storage : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                DUP 2;      # pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @storage : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                CAR;        # pair (nat %action_id) (big_map %job_destination nat address) : @storage : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                CDR;        # big_map nat address : @storage : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                UPDATE 3;   # @storage : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                UNPAIR;     # pair (pair %config (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) (nat %ingoing_seq_id) : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                UNPAIR;     # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                DUP;        # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                GET 7;      # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                DUP;        # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : pair (string %kind) (bytes %payload) : list operation : @parameter%send_actions
                DIG 6;      # pair (string %kind) (bytes %payload) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%send_actions
                CAR;        # string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%send_actions
                DUP;        # string : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%send_actions
                DUG 2;      # string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%send_actions
                GET;        # option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%send_actions
                IF_NONE
                  {
                    PUSH int 343; # int : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%send_actions
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : list operation : @parameter%send_actions
                DIG 6;      # pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version)) : @some : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%send_actions
                CDR;        # pair (bytes %data) (nat %version) : @some : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%send_actions
                UPDATE 2;   # @some : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%send_actions
                SOME;       # option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : string : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%send_actions
                SWAP;       # string : option (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%send_actions
                UPDATE;     # big_map string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version))) : pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%send_actions
                UPDATE 7;   # pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator)))) : nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%send_actions
                PAIR;       # pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat : pair (big_map %job_destination nat address) (nat %outgoing_seq_id) : list operation : @parameter%send_actions
                PAIR;       # pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id)) : list operation : @parameter%send_actions
                DUG 2;      # list operation : @parameter%send_actions : pair (pair (pair (address %governance_address) (pair (big_map %ingoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version)))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (pair (address %merkle_aggregator) (pair (big_map %outgoing_actions string (pair (lambda %function (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair (address %merkle_aggregator) (pair (bytes %payload) (pair %storage (bytes %data) (nat %version))))) (list operation)) (pair (pair (pair %context (nat %action_id) (big_map %job_destination nat address)) (pair %new_action_storage (bytes %data) (nat %version))) (list operation))) (pair %storage (bytes %data) (nat %version)))) (address %proof_validator))))) nat) (pair (big_map %job_destination nat address) (nat %outgoing_seq_id))
              }; # list operation : @parameter%send_actions : @storage
            SWAP;       # @parameter%send_actions : list operation : @storage
            DROP;       # list operation : @storage
          }; # list operation : @storage
      }; # list operation : @storage
    NIL operation; # list operation : list operation : @storage
    SWAP;       # list operation : list operation : @storage
    ITER
      {
        CONS;       # list operation : @storage
      }; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };
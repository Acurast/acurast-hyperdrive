parameter (or (list %configure (or (address %update_governance_address) (or (nat %update_history_length) (or (nat %update_minimum_endorsements) (set %update_validators (or (address %add) (address %remove))))))) (or (pair %remove_old_roots (nat %from) (nat %to)) (pair %submit_root (bytes %root) (nat %snapshot))));
storage   (pair (pair (pair %config (address %governance_address) (pair (nat %minimum_endorsements) (set %validators address))) (nat %current_snapshot)) (pair (big_map %root nat bytes) (map %snapshot_submissions address bytes)));
code
  {
    UNPAIR;     
    IF_LEFT
      {
        SENDER;     
        DUP 3;      
        CAR;        
        CAR;        
        CAR;        
        COMPARE;    
        EQ;         
        IF
          {}
          {
            PUSH string "NOT_GOVERNANCE_ADDRESS"; 
            FAILWITH;   
          }; 
        DUP;        
        ITER
          {
            DUP;        
            IF_LEFT
              {
                SWAP;       
                DROP;       
                DIG 2;      
                UNPAIR;     
                UNPAIR;     
                DIG 3;      
                UPDATE 1;   
                PAIR;       
                PAIR;       
                SWAP;       
              }
              {
                IF_LEFT
                  {
                    DROP 2;     
                  }
                  {
                    IF_LEFT
                      {
                        SWAP;       
                        DROP;       
                        DIG 2;      
                        UNPAIR;     
                        UNPAIR;     
                        DIG 3;      
                        UPDATE 3;   
                        PAIR;       
                        PAIR;       
                        SWAP;       
                      }
                      {
                        DUP;        
                        ITER
                          {
                            IF_LEFT
                              {
                                DIG 4;      
                                UNPAIR;     
                                UNPAIR;     
                                DUP;        
                                GET 4;      
                                PUSH bool True; 
                                DIG 5;      
                                UPDATE;     
                                UPDATE 4;   
                                PAIR;       
                                PAIR;       
                                DUG 3;      
                              }
                              {
                                DIG 4;      
                                UNPAIR;     
                                UNPAIR;     
                                DUP;        
                                GET 4;      
                                PUSH bool False; 
                                DIG 5;      
                                UPDATE;     
                                UPDATE 4;   
                                PAIR;       
                                PAIR;       
                                DUG 3;      
                              }; 
                          }; 
                        DROP 2;     
                      }; 
                  }; 
              }; 
          }; 
        DROP;       
      }
      {
        IF_LEFT
          {
            SENDER;     
            DUP 3;      
            CAR;        
            CAR;        
            CAR;        
            COMPARE;    
            EQ;         
            IF
              {}
              {
                PUSH string "NOT_GOVERNANCE_ADDRESS"; 
                FAILWITH;   
              }; 
            DUP;        
            CAR;        
            DUP 2;      
            CDR;        
            DUP 2;      
            COMPARE;    
            LT;         
            LOOP
              {
                DIG 2;      
                DUP;        
                GET 3;      
                NONE bytes; 
                DUP 4;      
                UPDATE;     
                UPDATE 3;   
                DUG 2;      
                PUSH nat 1; 
                ADD;        
                DUP 2;      
                CDR;        
                DUP 2;      
                COMPARE;    
                LT;         
              }; 
            DROP 2;     
          }
          {
            DUP;        
            UNPAIR;     
            DUP 4;      
            CAR;        
            CAR;        
            GET 4;      
            SENDER;     
            MEM;        
            IF
              {}
              {
                PUSH string "NOT_VALIDATOR"; 
                FAILWITH;   
              }; 
            DUP 2;      
            DUP 5;      
            CAR;        
            CDR;        
            COMPARE;    
            EQ;         
            IF
              {}
              {
                PUSH string "INVALID_SNAPSHOT"; 
                FAILWITH;   
              }; 
            DIG 3;      
            DUP;        
            GET 4;      
            DUP 3;      
            SOME;       
            SENDER;     
            UPDATE;     
            UPDATE 4;   
            DUG 3;      
            LAMBDA
              (pair nat (map address bytes))
              (option bytes)
              {
                DUP;        
                UNPAIR;     
                EMPTY_MAP bytes nat; 
                DUP 3;      
                ITER
                  {
                    DUP 2;      
                    PUSH nat 1; 
                    DIG 3;      
                    DUP 4;      
                    CDR;        
                    GET;        
                    IF_NONE
                      {
                        PUSH nat 0; 
                      }
                      {}; 
                    ADD;        
                    SOME;       
                    DIG 2;      
                    CDR;        
                    UPDATE;     
                  }; 
                PUSH bytes 0x; 
                DUP 2;      
                ITER
                  {
                    CAR;        
                    DUP 3;      
                    DUP 3;      
                    GET;        
                    IF_NONE
                      {
                        PUSH nat 0; 
                      }
                      {}; 
                    DUP 4;      
                    DUP 3;      
                    GET;        
                    IF_NONE
                      {
                        PUSH int 636; 
                        FAILWITH;   
                      }
                      {}; 
                    COMPARE;    
                    GT;         
                    IF
                      {
                        SWAP;       
                        DROP;       
                      }
                      {
                        DROP;       
                      }; 
                  }; 
                PUSH nat 0; 
                DUP 3;      
                SIZE;       
                COMPARE;    
                EQ;         
                IF
                  {
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    PUSH bool True; 
                  }
                  {
                    DIG 3;      
                    DROP;       
                    DIG 3;      
                    DROP;       
                    DUG 2;      
                    DUP 3;      
                    GET;        
                    IF_NONE
                      {
                        PUSH int 643; 
                        FAILWITH;   
                      }
                      {}; 
                    COMPARE;    
                    LT;         
                  }; 
                IF
                  {
                    DROP;       
                    NONE bytes; 
                  }
                  {
                    SOME;       
                  }; 
              }; 
            DUP 5;      
            GET 4;      
            DUP 6;      
            CAR;        
            CAR;        
            GET 3;      
            PAIR;       
            EXEC;       
            IF_NONE
              {
                DROP 3;     
              }
              {
                DROP;       
                SWAP;       
                DROP;       
                SWAP;       
                DROP;       
                DUP 2;      
                DUP;        
                GET 3;      
                DIG 2;      
                SOME;       
                DIG 3;      
                CAR;        
                CDR;        
                UPDATE;     
                UPDATE 3;   
                UNPAIR;     
                UNPAIR;     
                SWAP;       
                PUSH nat 1; 
                ADD;        
                SWAP;       
                PAIR;       
                PAIR;       
                EMPTY_MAP address bytes; 
                UPDATE 4;   
              }; 
          }; 
      }; 
    NIL operation; 
    PAIR;       
  };
view
  "verify_proof" (pair (list %leaves (pair (bytes %hash) (pair (nat %k_index) (nat %mmr_pos)))) (pair (nat %mmr_size) (pair (list %proof bytes) (nat %snapshot)))) bool
  {
    UNPAIR;     
    DUP;        
    UNPAIR 4;   
    PUSH int 0; 
    EMPTY_MAP int (pair bytes (pair nat nat)); 
    DUP 7;      
    CAR;        
    ITER
      {
        SOME;       
        DUP 3;      
        UPDATE;     
        SWAP;       
        PUSH int 1; 
        ADD;        
        SWAP;       
      }; 
    SWAP;       
    DROP;       
    PUSH int 0; 
    SWAP;       
    EMPTY_MAP int bytes; 
    DUP 8;      
    GET 5;      
    ITER
      {
        SOME;       
        DUP 4;      
        UPDATE;     
        DIG 2;      
        PUSH int 1; 
        ADD;        
        DUG 2;      
      }; 
    DUP 9;      
    GET 3;      
    DUP 9;      
    GET 6;      
    GET;        
    IF_NONE
      {
        PUSH string "UNKNOWN_SNAPSHOT"; 
        FAILWITH;   
      }
      {}; 
    DUP 7;      
    ITER
      {
        DUP 2;      
        COMPARE;    
        NEQ;        
        IF
          {}
          {
            PUSH string "INVALID_PROOF"; 
            FAILWITH;   
          }; 
      }; 
    LAMBDA
      nat
      (list nat)
      {
        LAMBDA
          nat
          nat
          {
            PUSH nat 2; 
            PUSH nat 1; 
            DIG 2;      
            ADD;        
            PUSH nat 1; 
            LSL;        
            SUB;        
            ISNAT;      
            IF_NONE
              {
                PUSH string "NEGATIVE_RESULT"; 
                FAILWITH;   
              }
              {}; 
          }; 
        PUSH nat 1; 
        DUP 2;      
        DUP 2;      
        EXEC;       
        PUSH nat 0; 
        DUP 5;      
        DUP 3;      
        COMPARE;    
        LT;         
        LOOP
          {
            DROP;       
            SWAP;       
            PUSH nat 1; 
            ADD;        
            SWAP;       
            DUP 3;      
            DUP 3;      
            EXEC;       
            SWAP;       
            DUP 5;      
            DUP 3;      
            COMPARE;    
            LT;         
          }; 
        DUP;        
        PUSH nat 1; 
        DUP 5;      
        SUB;        
        ISNAT;      
        IF_NONE
          {
            PUSH int 487; 
            FAILWITH;   
          }
          {}; 
        NIL nat;    
        DUP 3;      
        CONS;       
        DUP 2;      
        DUP 4;      
        PUSH bool True; 
        PUSH nat 0; 
        DUP 4;      
        COMPARE;    
        GT;         
        LOOP
          {
            PUSH nat 1; 
            DUP 12;     
            SUB;        
            ISNAT;      
            IF_NONE
              {
                PUSH int 456; 
                FAILWITH;   
              }
              {}; 
            PUSH nat 1; 
            DUP 5;      
            PUSH nat 2; 
            LSL;        
            SUB;        
            ISNAT;      
            IF_NONE
              {
                PUSH int 504; 
                FAILWITH;   
              }
              {}; 
            DUP 4;      
            ADD;        
            DUP 5;      
            NONE (pair nat nat); 
            NONE (pair nat nat); 
            IF_NONE
              {
                DUP 4;      
                DUP 4;      
                COMPARE;    
                GT;         
              }
              {
                DROP;       
                PUSH bool False; 
              }; 
            LOOP
              {
                PUSH nat 0; 
                DUP 3;      
                COMPARE;    
                EQ;         
                IF
                  {
                    DROP;       
                    PUSH (option (pair nat nat)) (Some (Pair 0 0)); 
                  }
                  {
                    PUSH nat 1; 
                    DIG 2;      
                    SUB;        
                    ISNAT;      
                    IF_NONE
                      {
                        PUSH int 464; 
                        FAILWITH;   
                      }
                      {}; 
                    SWAP;       
                    DUP 2;      
                    PUSH nat 2; 
                    LSL;        
                    DIG 3;      
                    SUB;        
                    ISNAT;      
                    IF_NONE
                      {
                        PUSH int 465; 
                        FAILWITH;   
                      }
                      {}; 
                    DUG 2;      
                  }; 
                DUP;        
                IF_NONE
                  {
                    DUP 4;      
                    DUP 4;      
                    COMPARE;    
                    GT;         
                  }
                  {
                    DROP;       
                    PUSH bool False; 
                  }; 
              }; 
            DUP;        
            IF_NONE
              {
                DROP;       
                DUP 2;      
                DUP 2;      
                PAIR;       
                SOME;       
              }
              {
                DROP;       
              }; 
            DUP;        
            IF_NONE
              {
                PUSH int 470; 
                FAILWITH;   
              }
              {}; 
            UNPAIR;     
            PUSH nat 0; 
            DUP 2;      
            COMPARE;    
            EQ;         
            IF
              {
                PUSH nat 0; 
                DUP 3;      
                COMPARE;    
                EQ;         
              }
              {
                PUSH bool False; 
              }; 
            IF
              {
                DIG 6;      
                DROP 7;     
                PUSH bool False; 
              }
              {
                DIG 7;      
                DROP 2;     
                SWAP;       
                DROP;       
                SWAP;       
                DROP;       
                SWAP;       
                DROP;       
                SWAP;       
                DROP;       
                DIG 3;      
                DUP 2;      
                CONS;       
                DUG 3;      
                SWAP;       
              }; 
            DUP;        
            IF
              {
                PUSH nat 0; 
                DUP 4;      
                COMPARE;    
                GT;         
              }
              {
                PUSH bool False; 
              }; 
          }; 
        DROP 3;     
        SWAP;       
        DROP;       
        SWAP;       
        DROP;       
        SWAP;       
        DROP;       
        SWAP;       
        DROP;       
        SWAP;       
        DROP;       
        SWAP;       
        DROP;       
        SWAP;       
        DROP;       
        NIL nat;    
        SWAP;       
        ITER
          {
            CONS;       
          }; 
      }; 
    DUP 10;     
    GET 3;      
    EXEC;       
    PUSH (pair (map int bytes) int) (Pair {} 0); 
    PUSH int 0; 
    DUP 5;      
    PAIR;       
    DUP 6;      
    PUSH bool True; 
    DUP 5;      
    ITER
      {
        DUP 2;      
        IF
          {
            EMPTY_MAP nat (pair bytes (pair nat nat)); 
            PUSH nat 0; 
            DUP 5;      
            SIZE;       
            COMPARE;    
            GT;         
            IF
              {
                EMPTY_MAP nat (pair bytes (pair nat nat)); 
                PUSH nat 0; 
                EMPTY_MAP int (pair bytes (pair nat nat)); 
                PUSH int 0; 
                DUP;        
                PUSH bool False; 
                DUP 10;     
                ITER
                  {
                    CDR;        
                    DUP 2;      
                    IF
                      {
                        PUSH bool True; 
                      }
                      {
                        DUP;        
                        GET 4;      
                        DUP 10;     
                        COMPARE;    
                        LT;         
                      }; 
                    IF
                      {
                        SWAP;       
                        DROP;       
                        DIG 3;      
                        SWAP;       
                        SOME;       
                        DUP 4;      
                        UPDATE;     
                        DUG 2;      
                        SWAP;       
                        PUSH int 1; 
                        ADD;        
                        SWAP;       
                        PUSH bool True; 
                      }
                      {
                        DIG 6;      
                        SWAP;       
                        SOME;       
                        DUP 7;      
                        UPDATE;     
                        DUG 5;      
                        DIG 4;      
                        PUSH nat 1; 
                        ADD;        
                        DUG 4;      
                      }; 
                  }; 
                DIG 6;      
                DROP 4;     
                SWAP;       
                DROP;       
                DIG 4;      
                DROP;       
                DUG 3;      
              }
              {}; 
            DUP;        
            SIZE;       
            PUSH nat 0; 
            DUP 2;      
            COMPARE;    
            EQ;         
            IF
              {
                DUP 6;      
                CDR;        
                DUP 7;      
                CAR;        
                SIZE;       
                INT;        
                COMPARE;    
                EQ;         
                IF
                  {
                    DIG 3;      
                    DROP 4;     
                    PUSH bool False; 
                  }
                  {
                    DROP 3;     
                    DUP 3;      
                    CAR;        
                    DUP 4;      
                    CDR;        
                    GET;        
                    IF_NONE
                      {
                        PUSH int 66; 
                        FAILWITH;   
                      }
                      {}; 
                    DIG 3;      
                    DUP;        
                    CDR;        
                    PUSH int 1; 
                    ADD;        
                    UPDATE 2;   
                    DUG 3;      
                    DUP 5;      
                    DUP;        
                    CAR;        
                    DIG 2;      
                    SOME;       
                    DIG 6;      
                    CDR;        
                    UPDATE;     
                    UPDATE 1;   
                    DUP;        
                    CDR;        
                    PUSH int 1; 
                    ADD;        
                    UPDATE 2;   
                    DUG 3;      
                  }; 
              }
              {
                PUSH nat 1; 
                DUP 2;      
                COMPARE;    
                EQ;         
                IF
                  {
                    DUP 3;      
                    DUP 3;      
                    PUSH nat 0; 
                    GET;        
                    IF_NONE
                      {
                        PUSH int 254; 
                        FAILWITH;   
                      }
                      {}; 
                    GET 4;      
                    COMPARE;    
                    EQ;         
                  }
                  {
                    PUSH bool False; 
                  }; 
                IF
                  {
                    DROP;       
                    SWAP;       
                    DROP;       
                    DUP 5;      
                    DUP;        
                    CAR;        
                    DIG 2;      
                    PUSH nat 0; 
                    GET;        
                    IF_NONE
                      {
                        PUSH int 255; 
                        FAILWITH;   
                      }
                      {}; 
                    CAR;        
                    SOME;       
                    DIG 6;      
                    CDR;        
                    UPDATE;     
                    UPDATE 1;   
                    DUP;        
                    CDR;        
                    PUSH int 1; 
                    ADD;        
                    UPDATE 2;   
                    DUG 3;      
                  }
                  {
                    EMPTY_MAP nat (pair bytes nat); 
                    EMPTY_MAP nat nat; 
                    PUSH nat 0; 
                    DUP 5;      
                    SIZE;       
                    DUP;        
                    DUP 3;      
                    COMPARE;    
                    LT;         
                    LOOP
                      {
                        DUP 6;      
                        DUP 3;      
                        GET;        
                        IF_NONE
                          {
                            PUSH int 397; 
                            FAILWITH;   
                          }
                          {}; 
                        DIG 4;      
                        DUP 2;      
                        GET 3;      
                        DUP 3;      
                        CAR;        
                        PAIR;       
                        SOME;       
                        DUP 5;      
                        UPDATE;     
                        DUG 4;      
                        DIG 3;      
                        SWAP;       
                        GET 3;      
                        SOME;       
                        DUP 4;      
                        UPDATE;     
                        DUG 2;      
                        SWAP;       
                        PUSH nat 1; 
                        ADD;        
                        SWAP;       
                        DUP;        
                        DUP 3;      
                        COMPARE;    
                        LT;         
                      }; 
                    DUP 3;      
                    DUP 5;      
                    PAIR;       
                    DUP;        
                    CAR;        
                    DUP 2;      
                    CDR;        
                    PUSH nat 1; 
                    DUP 11;     
                    ADD;        
                    PUSH int 0; 
                    DUP 2;      
                    PUSH nat 0; 
                    DUP 2;      
                    COMPARE;    
                    GT;         
                    LOOP
                      {
                        DUP;        
                        PUSH nat 1; 
                        DIG 2;      
                        SUB;        
                        ABS;        
                        AND;        
                        SWAP;       
                        PUSH int 1; 
                        ADD;        
                        SWAP;       
                        PUSH nat 0; 
                        DUP 2;      
                        COMPARE;    
                        GT;         
                      }; 
                    DUP 2;      
                    PUSH int 64; 
                    SUB;        
                    ISNAT;      
                    IF_NONE
                      {
                        PUSH string "NEGATIVE_RESULT"; 
                        FAILWITH;   
                      }
                      {}; 
                    PUSH nat 0; 
                    DUP;        
                    PUSH bool False; 
                    PUSH nat 64; 
                    DUP 3;      
                    COMPARE;    
                    LT;         
                    LOOP
                      {
                        PUSH nat 0; 
                        PUSH nat 9223372036854775808; 
                        DUP 4;      
                        DUP 10;     
                        LSL;        
                        AND;        
                        COMPARE;    
                        NEQ;        
                        IF
                          {
                            DROP;       
                            PUSH bool True; 
                          }
                          {
                            DIG 2;      
                            PUSH nat 1; 
                            ADD;        
                            DUG 2;      
                          }; 
                        SWAP;       
                        PUSH nat 1; 
                        ADD;        
                        SWAP;       
                        DUP;        
                        IF
                          {
                            PUSH bool False; 
                          }
                          {
                            PUSH nat 64; 
                            DUP 3;      
                            COMPARE;    
                            LT;         
                          }; 
                      }; 
                    DUP 3;      
                    PUSH nat 0; 
                    DUP 9;      
                    COMPARE;    
                    NEQ;        
                    IF
                      {
                        DUP;        
                        DUP 6;      
                        COMPARE;    
                        EQ;         
                      }
                      {
                        PUSH bool False; 
                      }; 
                    DUP;        
                    NOT;        
                    LOOP
                      {
                        PUSH nat 0; 
                        DUP;        
                        PUSH bool False; 
                        PUSH nat 64; 
                        DUP 3;      
                        COMPARE;    
                        LT;         
                        LOOP
                          {
                            PUSH nat 0; 
                            PUSH nat 9223372036854775808; 
                            DUP 4;      
                            DUP 15;     
                            LSL;        
                            AND;        
                            COMPARE;    
                            NEQ;        
                            IF
                              {
                                DROP;       
                                PUSH bool True; 
                              }
                              {
                                DIG 2;      
                                PUSH nat 1; 
                                ADD;        
                                DUG 2;      
                              }; 
                            SWAP;       
                            PUSH nat 1; 
                            ADD;        
                            SWAP;       
                            DUP;        
                            IF
                              {
                                PUSH bool False; 
                              }
                              {
                                PUSH nat 64; 
                                DUP 3;      
                                COMPARE;    
                                LT;         
                              }; 
                          }; 
                        DIG 8;      
                        DROP;       
                        PUSH nat 1; 
                        DUP;        
                        DUP 5;      
                        PUSH nat 64; 
                        SUB;        
                        ISNAT;      
                        IF_NONE
                          {
                            PUSH string "NEGATIVE_RESULT"; 
                            FAILWITH;   
                          }
                          {}; 
                        SUB;        
                        ISNAT;      
                        IF_NONE
                          {
                            PUSH string "NEGATIVE_RESULT"; 
                            FAILWITH;   
                          }
                          {}; 
                        PUSH nat 1; 
                        LSL;        
                        SUB;        
                        DIG 11;     
                        INT;        
                        SUB;        
                        ISNAT;      
                        IF_NONE
                          {
                            PUSH string "NEGATIVE_RESULT"; 
                            FAILWITH;   
                          }
                          {}; 
                        DUG 10;     
                        PUSH int 0; 
                        DUP 12;     
                        PUSH nat 0; 
                        DUP 2;      
                        COMPARE;    
                        GT;         
                        LOOP
                          {
                            DUP;        
                            PUSH nat 1; 
                            DIG 2;      
                            SUB;        
                            ABS;        
                            AND;        
                            SWAP;       
                            PUSH int 1; 
                            ADD;        
                            SWAP;       
                            PUSH nat 0; 
                            DUP 2;      
                            COMPARE;    
                            GT;         
                          }; 
                        DUP 2;      
                        PUSH int 64; 
                        SUB;        
                        ISNAT;      
                        IF_NONE
                          {
                            PUSH string "NEGATIVE_RESULT"; 
                            FAILWITH;   
                          }
                          {}; 
                        DUG 10;     
                        PUSH nat 0; 
                        DUP;        
                        PUSH bool False; 
                        PUSH nat 64; 
                        DUP 3;      
                        COMPARE;    
                        LT;         
                        LOOP
                          {
                            PUSH nat 0; 
                            PUSH nat 9223372036854775808; 
                            DUP 4;      
                            DUP 20;     
                            LSL;        
                            AND;        
                            COMPARE;    
                            NEQ;        
                            IF
                              {
                                DROP;       
                                PUSH bool True; 
                              }
                              {
                                DIG 2;      
                                PUSH nat 1; 
                                ADD;        
                                DUG 2;      
                              }; 
                            SWAP;       
                            PUSH nat 1; 
                            ADD;        
                            SWAP;       
                            DUP;        
                            IF
                              {
                                PUSH bool False; 
                              }
                              {
                                PUSH nat 64; 
                                DUP 3;      
                                COMPARE;    
                                LT;         
                              }; 
                          }; 
                        DIG 9;      
                        DROP 3;     
                        SWAP;       
                        DROP;       
                        SWAP;       
                        DROP;       
                        SWAP;       
                        DROP;       
                        SWAP;       
                        DROP;       
                        SWAP;       
                        DROP;       
                        SWAP;       
                        DROP;       
                        PUSH nat 0; 
                        DUP 9;      
                        COMPARE;    
                        NEQ;        
                        IF
                          {
                            DUP;        
                            DUP 6;      
                            COMPARE;    
                            EQ;         
                          }
                          {
                            PUSH bool False; 
                          }; 
                        DUP;        
                        NOT;        
                      }; 
                    PUSH nat 0; 
                    DUP;        
                    PUSH bool False; 
                    PUSH nat 64; 
                    DUP 3;      
                    COMPARE;    
                    LT;         
                    LOOP
                      {
                        PUSH nat 0; 
                        PUSH nat 9223372036854775808; 
                        DUP 4;      
                        DUP 15;     
                        LSL;        
                        AND;        
                        COMPARE;    
                        NEQ;        
                        IF
                          {
                            DROP;       
                            PUSH bool True; 
                          }
                          {
                            DIG 2;      
                            PUSH nat 1; 
                            ADD;        
                            DUG 2;      
                          }; 
                        SWAP;       
                        PUSH nat 1; 
                        ADD;        
                        SWAP;       
                        DUP;        
                        IF
                          {
                            PUSH bool False; 
                          }
                          {
                            PUSH nat 64; 
                            DUP 3;      
                            COMPARE;    
                            LT;         
                          }; 
                      }; 
                    PUSH int 1; 
                    DUP 4;      
                    PUSH nat 64; 
                    SUB;        
                    SUB;        
                    EMPTY_MAP int (map nat (pair bytes nat)); 
                    PUSH int 0; 
                    PUSH bool True; 
                    DUP 4;      
                    DUP 3;      
                    COMPARE;    
                    LT;         
                    LOOP
                      {
                        DIG 2;      
                        PUSH (option (map nat (pair bytes nat))) (Some {}); 
                        DUP 4;      
                        UPDATE;     
                        DUG 2;      
                        EMPTY_MAP nat nat; 
                        DUP 18;     
                        SIZE;       
                        PUSH nat 0; 
                        DUP 2;      
                        DUP 2;      
                        COMPARE;    
                        LT;         
                        LOOP
                          {
                            DUP 20;     
                            DUP 2;      
                            GET;        
                            IF_NONE
                              {
                                PUSH int 356; 
                                FAILWITH;   
                              }
                              {}; 
                            PUSH nat 0; 
                            PUSH nat 2; 
                            DUP 3;      
                            EDIV;       
                            IF_NONE
                              {
                                PUSH int 357; 
                                FAILWITH;   
                              }
                              {
                                CDR;        
                              }; 
                            COMPARE;    
                            EQ;         
                            IF
                              {
                                DIG 3;      
                                PUSH nat 1; 
                                DIG 2;      
                                ADD;        
                                SOME;       
                                DUP 3;      
                                UPDATE;     
                                DUG 2;      
                              }
                              {
                                DIG 3;      
                                PUSH nat 1; 
                                DIG 2;      
                                SUB;        
                                ISNAT;      
                                IF_NONE
                                  {
                                    PUSH int 360; 
                                    FAILWITH;   
                                  }
                                  {}; 
                                SOME;       
                                DUP 3;      
                                UPDATE;     
                                DUG 2;      
                              }; 
                            PUSH nat 1; 
                            ADD;        
                            DUP 2;      
                            DUP 2;      
                            COMPARE;    
                            LT;         
                          }; 
                        DUP 3;      
                        EMPTY_MAP int nat; 
                        PUSH int 0; 
                        DUP 3;      
                        SIZE;       
                        PUSH nat 0; 
                        DUP 25;     
                        SIZE;       
                        DUP 3;      
                        DUP 3;      
                        COMPARE;    
                        LT;         
                        LOOP
                          {
                            DUP 6;      
                            DUP 3;      
                            GET;        
                            IF_NONE
                              {
                                PUSH int 322; 
                                FAILWITH;   
                              }
                              {}; 
                            PUSH bool False; 
                            PUSH nat 0; 
                            DUP 4;      
                            DUP 2;      
                            COMPARE;    
                            LT;         
                            LOOP
                              {
                                SWAP;       
                                IF
                                  {
                                    PUSH bool True; 
                                  }
                                  {
                                    DUP 28;     
                                    DUP 2;      
                                    GET;        
                                    IF_NONE
                                      {
                                        PUSH int 327; 
                                        FAILWITH;   
                                      }
                                      {}; 
                                    DUP 3;      
                                    COMPARE;    
                                    EQ;         
                                  }; 
                                SWAP;       
                                PUSH nat 1; 
                                ADD;        
                                DUP 4;      
                                DUP 2;      
                                COMPARE;    
                                LT;         
                              }; 
                            DROP;       
                            IF
                              {
                                DROP;       
                              }
                              {
                                DIG 5;      
                                SWAP;       
                                SOME;       
                                DUP 6;      
                                UPDATE;     
                                DUG 4;      
                                DIG 3;      
                                PUSH int 1; 
                                ADD;        
                                DUG 3;      
                              }; 
                            SWAP;       
                            PUSH nat 1; 
                            ADD;        
                            SWAP;       
                            DUP 3;      
                            DUP 3;      
                            COMPARE;    
                            LT;         
                          }; 
                        EMPTY_SET nat; 
                        PUSH int 0; 
                        DUP 6;      
                        DUP 2;      
                        COMPARE;    
                        LT;         
                        LOOP
                          {
                            SWAP;       
                            PUSH bool True; 
                            DUP 8;      
                            DUP 4;      
                            GET;        
                            IF_NONE
                              {
                                PUSH int 339; 
                                FAILWITH;   
                              }
                              {}; 
                            UPDATE;     
                            SWAP;       
                            PUSH int 1; 
                            ADD;        
                            DUP 6;      
                            DUP 2;      
                            COMPARE;    
                            LT;         
                          }; 
                        DUP 2;      
                        DUP;        
                        SIZE;       
                        PUSH nat 0; 
                        DUP 2;      
                        COMPARE;    
                        EQ;         
                        IF
                          {
                            DIG 13;     
                            DROP 14;    
                            PUSH bool False; 
                          }
                          {
                            PUSH nat 0; 
                            DUP 3;      
                            ITER
                              {
                                DUP 44;     
                                CAR;        
                                DUP 45;     
                                CDR;        
                                GET;        
                                IF_NONE
                                  {
                                    PUSH int 66; 
                                    FAILWITH;   
                                  }
                                  {}; 
                                DIG 44;     
                                DUP;        
                                CDR;        
                                PUSH int 1; 
                                ADD;        
                                UPDATE 2;   
                                DUG 44;     
                                DIG 18;     
                                DUP;        
                                DUP 20;     
                                DUP;        
                                DUG 2;      
                                GET;        
                                IF_NONE
                                  {
                                    PUSH int 302; 
                                    FAILWITH;   
                                  }
                                  {}; 
                                DIG 4;      
                                DIG 4;      
                                PAIR;       
                                SOME;       
                                DUP 5;      
                                UPDATE;     
                                SOME;       
                                SWAP;       
                                UPDATE;     
                                DUG 16;     
                                PUSH nat 1; 
                                ADD;        
                              }; 
                            DIG 11;     
                            DROP;       
                            EMPTY_MAP nat nat; 
                            DUP 12;     
                            SIZE;       
                            PUSH nat 0; 
                            DUG 13;     
                            DUP;        
                            DUP 15;     
                            COMPARE;    
                            LT;         
                            LOOP
                              {
                                DUP 13;     
                                DUP 15;     
                                GET;        
                                IF_NONE
                                  {
                                    PUSH int 378; 
                                    FAILWITH;   
                                  }
                                  {}; 
                                DIG 2;      
                                PUSH nat 2; 
                                DIG 2;      
                                EDIV;       
                                IF_NONE
                                  {
                                    PUSH int 379; 
                                    FAILWITH;   
                                  }
                                  {
                                    CAR;        
                                  }; 
                                SOME;       
                                DUP 15;     
                                UPDATE;     
                                SWAP;       
                                DIG 13;     
                                PUSH nat 1; 
                                ADD;        
                                DUG 13;     
                                DUP;        
                                DUP 15;     
                                COMPARE;    
                                LT;         
                              }; 
                            DIG 32;     
                            DROP 2;     
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            DUG 16;     
                          }; 
                        SWAP;       
                        PUSH int 1; 
                        ADD;        
                        SWAP;       
                        DUP;        
                        IF
                          {
                            DUP 4;      
                            DUP 3;      
                            COMPARE;    
                            LT;         
                          }
                          {
                            PUSH bool False; 
                          }; 
                      }; 
                    DROP 2;     
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    SWAP;       
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DIG 2;      
                    DROP;       
                    DUP 6;      
                    DUP;        
                    CAR;        
                    LAMBDA
                      (pair (map int (map nat (pair bytes nat))) (map nat (pair bytes nat)))
                      bytes
                      {
                        LAMBDA_REC
                          (map nat (pair bytes nat))
                          (map nat (pair bytes nat))
                          {
                            DUP;        
                            SIZE;       
                            PUSH nat 1; 
                            DUP 2;      
                            COMPARE;    
                            GT;         
                            IF
                              {
                                PUSH nat 2; 
                                DUP 2;      
                                EDIV;       
                                IF_NONE
                                  {
                                    PUSH int 133; 
                                    FAILWITH;   
                                  }
                                  {
                                    CAR;        
                                  }; 
                                INT;        
                                EMPTY_MAP nat (pair bytes nat); 
                                PUSH nat 0; 
                                EMPTY_MAP nat (pair bytes nat); 
                                PUSH nat 0; 
                                DUP;        
                                DUP 7;      
                                DUP 2;      
                                COMPARE;    
                                LT;         
                                LOOP
                                  {
                                    DUP 8;      
                                    DUP 2;      
                                    GET;        
                                    IF_NONE
                                      {
                                        PUSH int 141; 
                                        FAILWITH;   
                                      }
                                      {}; 
                                    PUSH int 0; 
                                    DUP 8;      
                                    COMPARE;    
                                    GT;         
                                    IF
                                      {
                                        DIG 5;      
                                        SWAP;       
                                        SOME;       
                                        DUP 6;      
                                        UPDATE;     
                                        DUG 4;      
                                        DIG 3;      
                                        PUSH nat 1; 
                                        ADD;        
                                        DUG 3;      
                                      }
                                      {
                                        DIG 3;      
                                        SWAP;       
                                        SOME;       
                                        DUP 4;      
                                        UPDATE;     
                                        DUG 2;      
                                        SWAP;       
                                        PUSH nat 1; 
                                        ADD;        
                                        SWAP;       
                                      }; 
                                    PUSH nat 1; 
                                    ADD;        
                                    DIG 5;      
                                    PUSH int 1; 
                                    SWAP;       
                                    SUB;        
                                    DUG 5;      
                                    DUP 7;      
                                    DUP 2;      
                                    COMPARE;    
                                    LT;         
                                  }; 
                                DROP 2;     
                                SWAP;       
                                DROP;       
                                DIG 2;      
                                DROP;       
                                DIG 2;      
                                DROP;       
                                DIG 2;      
                                DROP;       
                                DUP 3;      
                                DIG 2;      
                                EXEC;       
                                DUG 2;      
                                EXEC;       
                                LAMBDA
                                  (pair (map nat (pair bytes nat)) (map nat (pair bytes nat)))
                                  (map nat (pair bytes nat))
                                  {
                                    DUP;        
                                    UNPAIR;     
                                    EMPTY_MAP nat (pair bytes nat); 
                                    PUSH nat 0; 
                                    DUP;        
                                    DUP;        
                                    DUP 5;      
                                    SIZE;       
                                    DUP 7;      
                                    SIZE;       
                                    DUP 4;      
                                    DUP 3;      
                                    COMPARE;    
                                    GT;         
                                    IF
                                      {
                                        DUP 3;      
                                        DUP 2;      
                                        COMPARE;    
                                        GT;         
                                      }
                                      {
                                        PUSH bool False; 
                                      }; 
                                    LOOP
                                      {
                                        DUP 8;      
                                        DUP 4;      
                                        GET;        
                                        IF_NONE
                                          {
                                            PUSH int 107; 
                                            FAILWITH;   
                                          }
                                          {}; 
                                        CDR;        
                                        DUP 8;      
                                        DUP 6;      
                                        GET;        
                                        IF_NONE
                                          {
                                            PUSH int 106; 
                                            FAILWITH;   
                                          }
                                          {}; 
                                        CDR;        
                                        COMPARE;    
                                        LT;         
                                        IF
                                          {
                                            DIG 5;      
                                            DUP 7;      
                                            DUP 6;      
                                            GET;        
                                            IF_NONE
                                              {
                                                PUSH int 106; 
                                                FAILWITH;   
                                              }
                                              {}; 
                                            SOME;       
                                            DUP 7;      
                                            UPDATE;     
                                            DUG 5;      
                                            DIG 3;      
                                            PUSH nat 1; 
                                            ADD;        
                                            DUG 3;      
                                          }
                                          {
                                            DIG 5;      
                                            DUP 8;      
                                            DUP 5;      
                                            GET;        
                                            IF_NONE
                                              {
                                                PUSH int 107; 
                                                FAILWITH;   
                                              }
                                              {}; 
                                            SOME;       
                                            DUP 7;      
                                            UPDATE;     
                                            DUG 5;      
                                            DIG 2;      
                                            PUSH nat 1; 
                                            ADD;        
                                            DUG 2;      
                                          }; 
                                        DIG 4;      
                                        PUSH nat 1; 
                                        ADD;        
                                        DUG 4;      
                                        DUP 4;      
                                        DUP 3;      
                                        COMPARE;    
                                        GT;         
                                        IF
                                          {
                                            DUP 3;      
                                            DUP 2;      
                                            COMPARE;    
                                            GT;         
                                          }
                                          {
                                            PUSH bool False; 
                                          }; 
                                      }; 
                                    DUP 4;      
                                    DUP 3;      
                                    COMPARE;    
                                    GT;         
                                    LOOP
                                      {
                                        DIG 5;      
                                        DUP 7;      
                                        DUP 6;      
                                        GET;        
                                        IF_NONE
                                          {
                                            PUSH int 119; 
                                            FAILWITH;   
                                          }
                                          {}; 
                                        SOME;       
                                        DUP 7;      
                                        UPDATE;     
                                        DUG 5;      
                                        DIG 3;      
                                        PUSH nat 1; 
                                        ADD;        
                                        DUG 3;      
                                        DIG 4;      
                                        PUSH nat 1; 
                                        ADD;        
                                        DUG 4;      
                                        DUP 4;      
                                        DUP 3;      
                                        COMPARE;    
                                        GT;         
                                      }; 
                                    DUP 3;      
                                    DUP 2;      
                                    COMPARE;    
                                    GT;         
                                    LOOP
                                      {
                                        DIG 5;      
                                        DUP 8;      
                                        DUP 5;      
                                        GET;        
                                        IF_NONE
                                          {
                                            PUSH int 123; 
                                            FAILWITH;   
                                          }
                                          {}; 
                                        SOME;       
                                        DUP 7;      
                                        UPDATE;     
                                        DUG 5;      
                                        DIG 2;      
                                        PUSH nat 1; 
                                        ADD;        
                                        DUG 2;      
                                        DIG 4;      
                                        PUSH nat 1; 
                                        ADD;        
                                        DUG 4;      
                                        DUP 3;      
                                        DUP 2;      
                                        COMPARE;    
                                        GT;         
                                      }; 
                                    DROP 5;     
                                    SWAP;       
                                    DROP;       
                                    SWAP;       
                                    DROP;       
                                    SWAP;       
                                    DROP;       
                                  }; 
                                SWAP;       
                                DIG 2;      
                                PAIR;       
                                EXEC;       
                              }
                              {
                                DROP;       
                                SWAP;       
                                DROP;       
                              }; 
                          }; 
                        LAMBDA
                          (pair (map nat (pair bytes nat)) (map nat (pair bytes nat)))
                          (map nat (pair bytes nat))
                          {
                            DUP;        
                            UNPAIR;     
                            DUP;        
                            PUSH nat 0; 
                            DUP 2;      
                            SIZE;       
                            DUP 5;      
                            SIZE;       
                            DUP 5;      
                            SIZE;       
                            ADD;        
                            DUP;        
                            DUP 3;      
                            COMPARE;    
                            LT;         
                            LOOP
                              {
                                DIG 3;      
                                DUP 6;      
                                DUP 5;      
                                GET;        
                                IF_NONE
                                  {
                                    PUSH int 88; 
                                    FAILWITH;   
                                  }
                                  {}; 
                                SOME;       
                                DUP 4;      
                                UPDATE;     
                                DUG 3;      
                                DIG 2;      
                                PUSH nat 1; 
                                ADD;        
                                DUG 2;      
                                SWAP;       
                                PUSH nat 1; 
                                ADD;        
                                SWAP;       
                                DUP;        
                                DUP 3;      
                                COMPARE;    
                                LT;         
                              }; 
                            DROP 3;     
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                            SWAP;       
                            DROP;       
                          }; 
                        DUP 3;      
                        UNPAIR;     
                        EMPTY_MAP nat (pair bytes nat); 
                        DUP 2;      
                        DUP 6;      
                        DUP 6;      
                        DUP 5;      
                        PUSH int 0; 
                        GET;        
                        IF_NONE
                          {
                            PUSH int 181; 
                            FAILWITH;   
                          }
                          {}; 
                        DUP 7;      
                        PAIR;       
                        EXEC;       
                        EXEC;       
                        SOME;       
                        PUSH int 0; 
                        UPDATE;     
                        DUP;        
                        SIZE;       
                        INT;        
                        PUSH int 0; 
                        DUP 2;      
                        DUP 2;      
                        COMPARE;    
                        LT;         
                        LOOP
                          {
                            DUP 3;      
                            DUP 2;      
                            GET;        
                            IF_NONE
                              {
                                PUSH int 187; 
                                FAILWITH;   
                              }
                              {}; 
                            PUSH nat 0; 
                            DUP 6;      
                            SIZE;       
                            COMPARE;    
                            EQ;         
                            IF
                              {
                                DIG 4;      
                                DROP;       
                                DUP;        
                              }
                              {
                                DUP 9;      
                                DUP 9;      
                                DIG 6;      
                                DUP 4;      
                                PAIR;       
                                EXEC;       
                                EXEC;       
                                SWAP;       
                              }; 
                            EMPTY_MAP nat (pair bytes nat); 
                            DUG 5;      
                            PUSH nat 0; 
                            DUP 3;      
                            SIZE;       
                            PUSH nat 0; 
                            DUP 2;      
                            DUP 2;      
                            COMPARE;    
                            LT;         
                            LOOP
                              {
                                DUP 5;      
                                DUP 2;      
                                GET;        
                                IF_NONE
                                  {
                                    PUSH int 199; 
                                    FAILWITH;   
                                  }
                                  {}; 
                                DUP;        
                                CDR;        
                                PUSH nat 2; 
                                SWAP;       
                                EDIV;       
                                IF_NONE
                                  {
                                    PUSH int 200; 
                                    FAILWITH;   
                                  }
                                  {
                                    CAR;        
                                  }; 
                                UPDATE 2;   
                                DUP 3;      
                                PUSH nat 1; 
                                DUP 4;      
                                ADD;        
                                COMPARE;    
                                GE;         
                                IF
                                  {
                                    DIG 9;      
                                    SWAP;       
                                    SOME;       
                                    DUP 5;      
                                    UPDATE;     
                                    DUG 8;      
                                  }
                                  {
                                    DUP 6;      
                                    PUSH nat 1; 
                                    DUP 4;      
                                    ADD;        
                                    GET;        
                                    IF_NONE
                                      {
                                        PUSH int 204; 
                                        FAILWITH;   
                                      }
                                      {}; 
                                    CAR;        
                                    DUP 2;      
                                    CAR;        
                                    CONCAT;     
                                    KECCAK;     
                                    UPDATE 1;   
                                    DIG 9;      
                                    SWAP;       
                                    SOME;       
                                    DUP 5;      
                                    UPDATE;     
                                    DUG 8;      
                                    DIG 2;      
                                    PUSH nat 1; 
                                    ADD;        
                                    DUG 2;      
                                  }; 
                                PUSH nat 2; 
                                ADD;        
                                DUP 2;      
                                DUP 2;      
                                COMPARE;    
                                LT;         
                              }; 
                            DROP 5;     
                            PUSH int 1; 
                            ADD;        
                            DUP 2;      
                            DUP 2;      
                            COMPARE;    
                            LT;         
                          }; 
                        DROP 3;     
                        SWAP;       
                        DROP;       
                        SWAP;       
                        DROP;       
                        SWAP;       
                        DROP;       
                        SWAP;       
                        DROP;       
                        SWAP;       
                        DROP;       
                        PUSH nat 1; 
                        DUP 2;      
                        SIZE;       
                        COMPARE;    
                        EQ;         
                        IF
                          {}
                          {
                            PUSH string "NOT_ROOT_NODE"; 
                            FAILWITH;   
                          }; 
                        PUSH nat 0; 
                        GET;        
                        IF_NONE
                          {
                            PUSH int 216; 
                            FAILWITH;   
                          }
                          {}; 
                        CAR;        
                      }; 
                    DIG 4;      
                    DIG 4;      
                    PAIR;       
                    EXEC;       
                    SOME;       
                    DIG 6;      
                    CDR;        
                    UPDATE;     
                    UPDATE 1;   
                    DUP;        
                    CDR;        
                    PUSH int 1; 
                    ADD;        
                    UPDATE 2;   
                    DUG 3;      
                  }; 
              }; 
          }
          {
            DROP;       
          }; 
      }; 
    DIG 3;      
    DUP;        
    CDR;        
    PUSH int 1; 
    SWAP;       
    SUB;        
    UPDATE 2;   
    DUG 3;      
    PUSH int 0; 
    DUP 5;      
    CDR;        
    COMPARE;    
    NEQ;        
    LOOP
      {
        DUP 4;      
        CAR;        
        DUP 5;      
        CDR;        
        GET;        
        IF_NONE
          {
            PUSH int 73; 
            FAILWITH;   
          }
          {}; 
        DIG 4;      
        DUP;        
        CDR;        
        PUSH int 1; 
        SWAP;       
        SUB;        
        UPDATE 2;   
        DUG 4;      
        DUP 5;      
        CAR;        
        DUP 6;      
        CDR;        
        GET;        
        IF_NONE
          {
            PUSH int 73; 
            FAILWITH;   
          }
          {}; 
        SWAP;       
        DIG 5;      
        DUP;        
        CDR;        
        PUSH int 1; 
        SWAP;       
        SUB;        
        UPDATE 2;   
        DUG 5;      
        SWAP;       
        DIG 5;      
        DUP;        
        CDR;        
        PUSH int 1; 
        ADD;        
        UPDATE 2;   
        DUG 5;      
        DUP 6;      
        DUP;        
        CAR;        
        DIG 2;      
        DIG 3;      
        CONCAT;     
        KECCAK;     
        SOME;       
        DIG 6;      
        CDR;        
        UPDATE;     
        UPDATE 1;   
        DUG 3;      
        PUSH int 0; 
        DUP 5;      
        CDR;        
        COMPARE;    
        NEQ;        
      }; 
    DROP 3;     
    SWAP;       
    DROP;       
    DIG 2;      
    DROP;       
    DIG 2;      
    DROP;       
    DIG 2;      
    DROP;       
    DIG 2;      
    DROP;       
    DIG 2;      
    DROP;       
    DIG 2;      
    DROP;       
    DIG 2;      
    DROP;       
    DIG 2;      
    DROP;       
    DIG 2;      
    DROP;       
    CAR;        
    PUSH int 0; 
    GET;        
    IF_NONE
      {
        PUSH int 270; 
        FAILWITH;   
      }
      {}; 
    COMPARE;    
    EQ;         
  };